/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var proto_markets_pb = require('../proto/markets_pb.js');
goog.object.extend(proto, proto_markets_pb);
var proto_assets_pb = require('../proto/assets_pb.js');
goog.object.extend(proto, proto_assets_pb);
var proto_governance_pb = require('../proto/governance_pb.js');
goog.object.extend(proto, proto_governance_pb);
var proto_vega_pb = require('../proto/vega_pb.js');
goog.object.extend(proto, proto_vega_pb);
goog.exportSymbol('proto.vega.AuctionEvent', null, global);
goog.exportSymbol('proto.vega.BusEvent', null, global);
goog.exportSymbol('proto.vega.BusEventType', null, global);
goog.exportSymbol('proto.vega.LossSocialization', null, global);
goog.exportSymbol('proto.vega.MarketEvent', null, global);
goog.exportSymbol('proto.vega.MarketTick', null, global);
goog.exportSymbol('proto.vega.PositionResolution', null, global);
goog.exportSymbol('proto.vega.SettleDistressed', null, global);
goog.exportSymbol('proto.vega.SettlePosition', null, global);
goog.exportSymbol('proto.vega.TimeUpdate', null, global);
goog.exportSymbol('proto.vega.TradeSettlement', null, global);
goog.exportSymbol('proto.vega.TransferResponses', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.MarketEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.MarketEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.MarketEvent.displayName = 'proto.vega.MarketEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.TimeUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.TimeUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.TimeUpdate.displayName = 'proto.vega.TimeUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.TransferResponses = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vega.TransferResponses.repeatedFields_, null);
};
goog.inherits(proto.vega.TransferResponses, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.TransferResponses.displayName = 'proto.vega.TransferResponses';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.PositionResolution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.PositionResolution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.PositionResolution.displayName = 'proto.vega.PositionResolution';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.LossSocialization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.LossSocialization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.LossSocialization.displayName = 'proto.vega.LossSocialization';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.TradeSettlement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.TradeSettlement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.TradeSettlement.displayName = 'proto.vega.TradeSettlement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.SettlePosition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vega.SettlePosition.repeatedFields_, null);
};
goog.inherits(proto.vega.SettlePosition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.SettlePosition.displayName = 'proto.vega.SettlePosition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.SettleDistressed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.SettleDistressed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.SettleDistressed.displayName = 'proto.vega.SettleDistressed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.MarketTick = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.MarketTick, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.MarketTick.displayName = 'proto.vega.MarketTick';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.AuctionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.vega.AuctionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.AuctionEvent.displayName = 'proto.vega.AuctionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vega.BusEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, proto.vega.BusEvent.oneofGroups_);
};
goog.inherits(proto.vega.BusEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vega.BusEvent.displayName = 'proto.vega.BusEvent';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.MarketEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.MarketEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.MarketEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.MarketEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    payload: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.MarketEvent}
 */
proto.vega.MarketEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.MarketEvent;
  return proto.vega.MarketEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.MarketEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.MarketEvent}
 */
proto.vega.MarketEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.MarketEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.MarketEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.MarketEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.MarketEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPayload();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string marketID = 1;
 * @return {string}
 */
proto.vega.MarketEvent.prototype.getMarketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.vega.MarketEvent.prototype.setMarketid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string payload = 2;
 * @return {string}
 */
proto.vega.MarketEvent.prototype.getPayload = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.vega.MarketEvent.prototype.setPayload = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.TimeUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.TimeUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.TimeUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.TimeUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.TimeUpdate}
 */
proto.vega.TimeUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.TimeUpdate;
  return proto.vega.TimeUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.TimeUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.TimeUpdate}
 */
proto.vega.TimeUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.TimeUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.TimeUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.TimeUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.TimeUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 timestamp = 1;
 * @return {number}
 */
proto.vega.TimeUpdate.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.vega.TimeUpdate.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vega.TransferResponses.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.TransferResponses.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.TransferResponses.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.TransferResponses} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.TransferResponses.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsesList: jspb.Message.toObjectList(msg.getResponsesList(),
    proto_vega_pb.TransferResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.TransferResponses}
 */
proto.vega.TransferResponses.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.TransferResponses;
  return proto.vega.TransferResponses.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.TransferResponses} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.TransferResponses}
 */
proto.vega.TransferResponses.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_vega_pb.TransferResponse;
      reader.readMessage(value,proto_vega_pb.TransferResponse.deserializeBinaryFromReader);
      msg.addResponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.TransferResponses.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.TransferResponses.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.TransferResponses} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.TransferResponses.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto_vega_pb.TransferResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TransferResponse responses = 1;
 * @return {!Array<!proto.vega.TransferResponse>}
 */
proto.vega.TransferResponses.prototype.getResponsesList = function() {
  return /** @type{!Array<!proto.vega.TransferResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_vega_pb.TransferResponse, 1));
};


/** @param {!Array<!proto.vega.TransferResponse>} value */
proto.vega.TransferResponses.prototype.setResponsesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.TransferResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.TransferResponse}
 */
proto.vega.TransferResponses.prototype.addResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.TransferResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.vega.TransferResponses.prototype.clearResponsesList = function() {
  this.setResponsesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.PositionResolution.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.PositionResolution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.PositionResolution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.PositionResolution.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    distressed: jspb.Message.getFieldWithDefault(msg, 2, 0),
    closed: jspb.Message.getFieldWithDefault(msg, 3, 0),
    markprice: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.PositionResolution}
 */
proto.vega.PositionResolution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.PositionResolution;
  return proto.vega.PositionResolution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.PositionResolution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.PositionResolution}
 */
proto.vega.PositionResolution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDistressed(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClosed(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMarkprice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.PositionResolution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.PositionResolution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.PositionResolution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.PositionResolution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDistressed();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getClosed();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getMarkprice();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional string marketID = 1;
 * @return {string}
 */
proto.vega.PositionResolution.prototype.getMarketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.vega.PositionResolution.prototype.setMarketid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 distressed = 2;
 * @return {number}
 */
proto.vega.PositionResolution.prototype.getDistressed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.vega.PositionResolution.prototype.setDistressed = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 closed = 3;
 * @return {number}
 */
proto.vega.PositionResolution.prototype.getClosed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.vega.PositionResolution.prototype.setClosed = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 markPrice = 4;
 * @return {number}
 */
proto.vega.PositionResolution.prototype.getMarkprice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.vega.PositionResolution.prototype.setMarkprice = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.LossSocialization.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.LossSocialization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.LossSocialization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.LossSocialization.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partyid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.LossSocialization}
 */
proto.vega.LossSocialization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.LossSocialization;
  return proto.vega.LossSocialization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.LossSocialization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.LossSocialization}
 */
proto.vega.LossSocialization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.LossSocialization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.LossSocialization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.LossSocialization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.LossSocialization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPartyid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string marketID = 1;
 * @return {string}
 */
proto.vega.LossSocialization.prototype.getMarketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.vega.LossSocialization.prototype.setMarketid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string partyID = 2;
 * @return {string}
 */
proto.vega.LossSocialization.prototype.getPartyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.vega.LossSocialization.prototype.setPartyid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 amount = 3;
 * @return {number}
 */
proto.vega.LossSocialization.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.vega.LossSocialization.prototype.setAmount = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.TradeSettlement.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.TradeSettlement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.TradeSettlement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.TradeSettlement.toObject = function(includeInstance, msg) {
  var f, obj = {
    size: jspb.Message.getFieldWithDefault(msg, 1, 0),
    price: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.TradeSettlement}
 */
proto.vega.TradeSettlement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.TradeSettlement;
  return proto.vega.TradeSettlement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.TradeSettlement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.TradeSettlement}
 */
proto.vega.TradeSettlement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.TradeSettlement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.TradeSettlement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.TradeSettlement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.TradeSettlement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional int64 size = 1;
 * @return {number}
 */
proto.vega.TradeSettlement.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.vega.TradeSettlement.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 price = 2;
 * @return {number}
 */
proto.vega.TradeSettlement.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.vega.TradeSettlement.prototype.setPrice = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vega.SettlePosition.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.SettlePosition.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.SettlePosition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.SettlePosition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.SettlePosition.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partyid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tradesettlementsList: jspb.Message.toObjectList(msg.getTradesettlementsList(),
    proto.vega.TradeSettlement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.SettlePosition}
 */
proto.vega.SettlePosition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.SettlePosition;
  return proto.vega.SettlePosition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.SettlePosition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.SettlePosition}
 */
proto.vega.SettlePosition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPrice(value);
      break;
    case 4:
      var value = new proto.vega.TradeSettlement;
      reader.readMessage(value,proto.vega.TradeSettlement.deserializeBinaryFromReader);
      msg.addTradesettlements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.SettlePosition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.SettlePosition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.SettlePosition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.SettlePosition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPartyid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getTradesettlementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.vega.TradeSettlement.serializeBinaryToWriter
    );
  }
};


/**
 * optional string marketID = 1;
 * @return {string}
 */
proto.vega.SettlePosition.prototype.getMarketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.vega.SettlePosition.prototype.setMarketid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string partyID = 2;
 * @return {string}
 */
proto.vega.SettlePosition.prototype.getPartyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.vega.SettlePosition.prototype.setPartyid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 price = 3;
 * @return {number}
 */
proto.vega.SettlePosition.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.vega.SettlePosition.prototype.setPrice = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated TradeSettlement tradeSettlements = 4;
 * @return {!Array<!proto.vega.TradeSettlement>}
 */
proto.vega.SettlePosition.prototype.getTradesettlementsList = function() {
  return /** @type{!Array<!proto.vega.TradeSettlement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vega.TradeSettlement, 4));
};


/** @param {!Array<!proto.vega.TradeSettlement>} value */
proto.vega.SettlePosition.prototype.setTradesettlementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.vega.TradeSettlement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.TradeSettlement}
 */
proto.vega.SettlePosition.prototype.addTradesettlements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.vega.TradeSettlement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.vega.SettlePosition.prototype.clearTradesettlementsList = function() {
  this.setTradesettlementsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.SettleDistressed.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.SettleDistressed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.SettleDistressed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.SettleDistressed.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partyid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    margin: jspb.Message.getFieldWithDefault(msg, 3, 0),
    price: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.SettleDistressed}
 */
proto.vega.SettleDistressed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.SettleDistressed;
  return proto.vega.SettleDistressed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.SettleDistressed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.SettleDistressed}
 */
proto.vega.SettleDistressed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMargin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.SettleDistressed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.SettleDistressed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.SettleDistressed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.SettleDistressed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPartyid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMargin();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional string marketID = 1;
 * @return {string}
 */
proto.vega.SettleDistressed.prototype.getMarketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.vega.SettleDistressed.prototype.setMarketid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string partyID = 2;
 * @return {string}
 */
proto.vega.SettleDistressed.prototype.getPartyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.vega.SettleDistressed.prototype.setPartyid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 margin = 3;
 * @return {number}
 */
proto.vega.SettleDistressed.prototype.getMargin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.vega.SettleDistressed.prototype.setMargin = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 price = 4;
 * @return {number}
 */
proto.vega.SettleDistressed.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.vega.SettleDistressed.prototype.setPrice = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.MarketTick.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.MarketTick.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.MarketTick} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.MarketTick.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    time: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.MarketTick}
 */
proto.vega.MarketTick.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.MarketTick;
  return proto.vega.MarketTick.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.MarketTick} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.MarketTick}
 */
proto.vega.MarketTick.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.MarketTick.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.MarketTick.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.MarketTick} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.MarketTick.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.vega.MarketTick.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.vega.MarketTick.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 time = 2;
 * @return {number}
 */
proto.vega.MarketTick.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.vega.MarketTick.prototype.setTime = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.AuctionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.AuctionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.AuctionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.AuctionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    openingauction: jspb.Message.getFieldWithDefault(msg, 2, false),
    leave: jspb.Message.getFieldWithDefault(msg, 3, false),
    start: jspb.Message.getFieldWithDefault(msg, 4, 0),
    end: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.AuctionEvent}
 */
proto.vega.AuctionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.AuctionEvent;
  return proto.vega.AuctionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.AuctionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.AuctionEvent}
 */
proto.vega.AuctionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOpeningauction(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeave(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStart(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.AuctionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.AuctionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.AuctionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.AuctionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOpeningauction();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getLeave();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string marketID = 1;
 * @return {string}
 */
proto.vega.AuctionEvent.prototype.getMarketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.vega.AuctionEvent.prototype.setMarketid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool openingAuction = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.vega.AuctionEvent.prototype.getOpeningauction = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.vega.AuctionEvent.prototype.setOpeningauction = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool leave = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.vega.AuctionEvent.prototype.getLeave = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.vega.AuctionEvent.prototype.setLeave = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int64 start = 4;
 * @return {number}
 */
proto.vega.AuctionEvent.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.vega.AuctionEvent.prototype.setStart = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 end = 5;
 * @return {number}
 */
proto.vega.AuctionEvent.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.vega.AuctionEvent.prototype.setEnd = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.vega.BusEvent.oneofGroups_ = [[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,1001]];

/**
 * @enum {number}
 */
proto.vega.BusEvent.EventCase = {
  EVENT_NOT_SET: 0,
  TIMEUPDATE: 101,
  TRANSFERRESPONSES: 102,
  POSITIONRESOLUTION: 103,
  ORDER: 104,
  ACCOUNT: 105,
  PARTY: 106,
  TRADE: 107,
  MARGINLEVELS: 108,
  PROPOSAL: 109,
  VOTE: 110,
  MARKETDATA: 111,
  NODESIGNATURE: 112,
  LOSSSOCIALIZATION: 113,
  SETTLEPOSITION: 114,
  SETTLEDISTRESSED: 115,
  MARKETCREATED: 116,
  ASSET: 117,
  MARKETTICK: 118,
  WITHDRAWAL: 119,
  DEPOSIT: 120,
  AUCTION: 121,
  MARKET: 1001
};

/**
 * @return {proto.vega.BusEvent.EventCase}
 */
proto.vega.BusEvent.prototype.getEventCase = function() {
  return /** @type {proto.vega.BusEvent.EventCase} */(jspb.Message.computeOneofCase(this, proto.vega.BusEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vega.BusEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.vega.BusEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vega.BusEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.BusEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timeupdate: (f = msg.getTimeupdate()) && proto.vega.TimeUpdate.toObject(includeInstance, f),
    transferresponses: (f = msg.getTransferresponses()) && proto.vega.TransferResponses.toObject(includeInstance, f),
    positionresolution: (f = msg.getPositionresolution()) && proto.vega.PositionResolution.toObject(includeInstance, f),
    order: (f = msg.getOrder()) && proto_vega_pb.Order.toObject(includeInstance, f),
    account: (f = msg.getAccount()) && proto_vega_pb.Account.toObject(includeInstance, f),
    party: (f = msg.getParty()) && proto_vega_pb.Party.toObject(includeInstance, f),
    trade: (f = msg.getTrade()) && proto_vega_pb.Trade.toObject(includeInstance, f),
    marginlevels: (f = msg.getMarginlevels()) && proto_vega_pb.MarginLevels.toObject(includeInstance, f),
    proposal: (f = msg.getProposal()) && proto_governance_pb.Proposal.toObject(includeInstance, f),
    vote: (f = msg.getVote()) && proto_governance_pb.Vote.toObject(includeInstance, f),
    marketdata: (f = msg.getMarketdata()) && proto_vega_pb.MarketData.toObject(includeInstance, f),
    nodesignature: (f = msg.getNodesignature()) && proto_vega_pb.NodeSignature.toObject(includeInstance, f),
    losssocialization: (f = msg.getLosssocialization()) && proto.vega.LossSocialization.toObject(includeInstance, f),
    settleposition: (f = msg.getSettleposition()) && proto.vega.SettlePosition.toObject(includeInstance, f),
    settledistressed: (f = msg.getSettledistressed()) && proto.vega.SettleDistressed.toObject(includeInstance, f),
    marketcreated: (f = msg.getMarketcreated()) && proto_markets_pb.Market.toObject(includeInstance, f),
    asset: (f = msg.getAsset()) && proto_assets_pb.Asset.toObject(includeInstance, f),
    markettick: (f = msg.getMarkettick()) && proto.vega.MarketTick.toObject(includeInstance, f),
    withdrawal: (f = msg.getWithdrawal()) && proto_vega_pb.Withdrawal.toObject(includeInstance, f),
    deposit: (f = msg.getDeposit()) && proto_vega_pb.Deposit.toObject(includeInstance, f),
    auction: (f = msg.getAuction()) && proto.vega.AuctionEvent.toObject(includeInstance, f),
    market: (f = msg.getMarket()) && proto.vega.MarketEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vega.BusEvent}
 */
proto.vega.BusEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vega.BusEvent;
  return proto.vega.BusEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vega.BusEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vega.BusEvent}
 */
proto.vega.BusEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.vega.BusEventType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 101:
      var value = new proto.vega.TimeUpdate;
      reader.readMessage(value,proto.vega.TimeUpdate.deserializeBinaryFromReader);
      msg.setTimeupdate(value);
      break;
    case 102:
      var value = new proto.vega.TransferResponses;
      reader.readMessage(value,proto.vega.TransferResponses.deserializeBinaryFromReader);
      msg.setTransferresponses(value);
      break;
    case 103:
      var value = new proto.vega.PositionResolution;
      reader.readMessage(value,proto.vega.PositionResolution.deserializeBinaryFromReader);
      msg.setPositionresolution(value);
      break;
    case 104:
      var value = new proto_vega_pb.Order;
      reader.readMessage(value,proto_vega_pb.Order.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    case 105:
      var value = new proto_vega_pb.Account;
      reader.readMessage(value,proto_vega_pb.Account.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 106:
      var value = new proto_vega_pb.Party;
      reader.readMessage(value,proto_vega_pb.Party.deserializeBinaryFromReader);
      msg.setParty(value);
      break;
    case 107:
      var value = new proto_vega_pb.Trade;
      reader.readMessage(value,proto_vega_pb.Trade.deserializeBinaryFromReader);
      msg.setTrade(value);
      break;
    case 108:
      var value = new proto_vega_pb.MarginLevels;
      reader.readMessage(value,proto_vega_pb.MarginLevels.deserializeBinaryFromReader);
      msg.setMarginlevels(value);
      break;
    case 109:
      var value = new proto_governance_pb.Proposal;
      reader.readMessage(value,proto_governance_pb.Proposal.deserializeBinaryFromReader);
      msg.setProposal(value);
      break;
    case 110:
      var value = new proto_governance_pb.Vote;
      reader.readMessage(value,proto_governance_pb.Vote.deserializeBinaryFromReader);
      msg.setVote(value);
      break;
    case 111:
      var value = new proto_vega_pb.MarketData;
      reader.readMessage(value,proto_vega_pb.MarketData.deserializeBinaryFromReader);
      msg.setMarketdata(value);
      break;
    case 112:
      var value = new proto_vega_pb.NodeSignature;
      reader.readMessage(value,proto_vega_pb.NodeSignature.deserializeBinaryFromReader);
      msg.setNodesignature(value);
      break;
    case 113:
      var value = new proto.vega.LossSocialization;
      reader.readMessage(value,proto.vega.LossSocialization.deserializeBinaryFromReader);
      msg.setLosssocialization(value);
      break;
    case 114:
      var value = new proto.vega.SettlePosition;
      reader.readMessage(value,proto.vega.SettlePosition.deserializeBinaryFromReader);
      msg.setSettleposition(value);
      break;
    case 115:
      var value = new proto.vega.SettleDistressed;
      reader.readMessage(value,proto.vega.SettleDistressed.deserializeBinaryFromReader);
      msg.setSettledistressed(value);
      break;
    case 116:
      var value = new proto_markets_pb.Market;
      reader.readMessage(value,proto_markets_pb.Market.deserializeBinaryFromReader);
      msg.setMarketcreated(value);
      break;
    case 117:
      var value = new proto_assets_pb.Asset;
      reader.readMessage(value,proto_assets_pb.Asset.deserializeBinaryFromReader);
      msg.setAsset(value);
      break;
    case 118:
      var value = new proto.vega.MarketTick;
      reader.readMessage(value,proto.vega.MarketTick.deserializeBinaryFromReader);
      msg.setMarkettick(value);
      break;
    case 119:
      var value = new proto_vega_pb.Withdrawal;
      reader.readMessage(value,proto_vega_pb.Withdrawal.deserializeBinaryFromReader);
      msg.setWithdrawal(value);
      break;
    case 120:
      var value = new proto_vega_pb.Deposit;
      reader.readMessage(value,proto_vega_pb.Deposit.deserializeBinaryFromReader);
      msg.setDeposit(value);
      break;
    case 121:
      var value = new proto.vega.AuctionEvent;
      reader.readMessage(value,proto.vega.AuctionEvent.deserializeBinaryFromReader);
      msg.setAuction(value);
      break;
    case 1001:
      var value = new proto.vega.MarketEvent;
      reader.readMessage(value,proto.vega.MarketEvent.deserializeBinaryFromReader);
      msg.setMarket(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vega.BusEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vega.BusEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vega.BusEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vega.BusEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTimeupdate();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.vega.TimeUpdate.serializeBinaryToWriter
    );
  }
  f = message.getTransferresponses();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.vega.TransferResponses.serializeBinaryToWriter
    );
  }
  f = message.getPositionresolution();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      proto.vega.PositionResolution.serializeBinaryToWriter
    );
  }
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      proto_vega_pb.Order.serializeBinaryToWriter
    );
  }
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      105,
      f,
      proto_vega_pb.Account.serializeBinaryToWriter
    );
  }
  f = message.getParty();
  if (f != null) {
    writer.writeMessage(
      106,
      f,
      proto_vega_pb.Party.serializeBinaryToWriter
    );
  }
  f = message.getTrade();
  if (f != null) {
    writer.writeMessage(
      107,
      f,
      proto_vega_pb.Trade.serializeBinaryToWriter
    );
  }
  f = message.getMarginlevels();
  if (f != null) {
    writer.writeMessage(
      108,
      f,
      proto_vega_pb.MarginLevels.serializeBinaryToWriter
    );
  }
  f = message.getProposal();
  if (f != null) {
    writer.writeMessage(
      109,
      f,
      proto_governance_pb.Proposal.serializeBinaryToWriter
    );
  }
  f = message.getVote();
  if (f != null) {
    writer.writeMessage(
      110,
      f,
      proto_governance_pb.Vote.serializeBinaryToWriter
    );
  }
  f = message.getMarketdata();
  if (f != null) {
    writer.writeMessage(
      111,
      f,
      proto_vega_pb.MarketData.serializeBinaryToWriter
    );
  }
  f = message.getNodesignature();
  if (f != null) {
    writer.writeMessage(
      112,
      f,
      proto_vega_pb.NodeSignature.serializeBinaryToWriter
    );
  }
  f = message.getLosssocialization();
  if (f != null) {
    writer.writeMessage(
      113,
      f,
      proto.vega.LossSocialization.serializeBinaryToWriter
    );
  }
  f = message.getSettleposition();
  if (f != null) {
    writer.writeMessage(
      114,
      f,
      proto.vega.SettlePosition.serializeBinaryToWriter
    );
  }
  f = message.getSettledistressed();
  if (f != null) {
    writer.writeMessage(
      115,
      f,
      proto.vega.SettleDistressed.serializeBinaryToWriter
    );
  }
  f = message.getMarketcreated();
  if (f != null) {
    writer.writeMessage(
      116,
      f,
      proto_markets_pb.Market.serializeBinaryToWriter
    );
  }
  f = message.getAsset();
  if (f != null) {
    writer.writeMessage(
      117,
      f,
      proto_assets_pb.Asset.serializeBinaryToWriter
    );
  }
  f = message.getMarkettick();
  if (f != null) {
    writer.writeMessage(
      118,
      f,
      proto.vega.MarketTick.serializeBinaryToWriter
    );
  }
  f = message.getWithdrawal();
  if (f != null) {
    writer.writeMessage(
      119,
      f,
      proto_vega_pb.Withdrawal.serializeBinaryToWriter
    );
  }
  f = message.getDeposit();
  if (f != null) {
    writer.writeMessage(
      120,
      f,
      proto_vega_pb.Deposit.serializeBinaryToWriter
    );
  }
  f = message.getAuction();
  if (f != null) {
    writer.writeMessage(
      121,
      f,
      proto.vega.AuctionEvent.serializeBinaryToWriter
    );
  }
  f = message.getMarket();
  if (f != null) {
    writer.writeMessage(
      1001,
      f,
      proto.vega.MarketEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.vega.BusEvent.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.vega.BusEvent.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BusEventType type = 2;
 * @return {!proto.vega.BusEventType}
 */
proto.vega.BusEvent.prototype.getType = function() {
  return /** @type {!proto.vega.BusEventType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.vega.BusEventType} value */
proto.vega.BusEvent.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional TimeUpdate timeUpdate = 101;
 * @return {?proto.vega.TimeUpdate}
 */
proto.vega.BusEvent.prototype.getTimeupdate = function() {
  return /** @type{?proto.vega.TimeUpdate} */ (
    jspb.Message.getWrapperField(this, proto.vega.TimeUpdate, 101));
};


/** @param {?proto.vega.TimeUpdate|undefined} value */
proto.vega.BusEvent.prototype.setTimeupdate = function(value) {
  jspb.Message.setOneofWrapperField(this, 101, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearTimeupdate = function() {
  this.setTimeupdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasTimeupdate = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional TransferResponses transferResponses = 102;
 * @return {?proto.vega.TransferResponses}
 */
proto.vega.BusEvent.prototype.getTransferresponses = function() {
  return /** @type{?proto.vega.TransferResponses} */ (
    jspb.Message.getWrapperField(this, proto.vega.TransferResponses, 102));
};


/** @param {?proto.vega.TransferResponses|undefined} value */
proto.vega.BusEvent.prototype.setTransferresponses = function(value) {
  jspb.Message.setOneofWrapperField(this, 102, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearTransferresponses = function() {
  this.setTransferresponses(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasTransferresponses = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional PositionResolution positionResolution = 103;
 * @return {?proto.vega.PositionResolution}
 */
proto.vega.BusEvent.prototype.getPositionresolution = function() {
  return /** @type{?proto.vega.PositionResolution} */ (
    jspb.Message.getWrapperField(this, proto.vega.PositionResolution, 103));
};


/** @param {?proto.vega.PositionResolution|undefined} value */
proto.vega.BusEvent.prototype.setPositionresolution = function(value) {
  jspb.Message.setOneofWrapperField(this, 103, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearPositionresolution = function() {
  this.setPositionresolution(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasPositionresolution = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional Order order = 104;
 * @return {?proto.vega.Order}
 */
proto.vega.BusEvent.prototype.getOrder = function() {
  return /** @type{?proto.vega.Order} */ (
    jspb.Message.getWrapperField(this, proto_vega_pb.Order, 104));
};


/** @param {?proto.vega.Order|undefined} value */
proto.vega.BusEvent.prototype.setOrder = function(value) {
  jspb.Message.setOneofWrapperField(this, 104, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearOrder = function() {
  this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional Account account = 105;
 * @return {?proto.vega.Account}
 */
proto.vega.BusEvent.prototype.getAccount = function() {
  return /** @type{?proto.vega.Account} */ (
    jspb.Message.getWrapperField(this, proto_vega_pb.Account, 105));
};


/** @param {?proto.vega.Account|undefined} value */
proto.vega.BusEvent.prototype.setAccount = function(value) {
  jspb.Message.setOneofWrapperField(this, 105, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearAccount = function() {
  this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 105) != null;
};


/**
 * optional Party party = 106;
 * @return {?proto.vega.Party}
 */
proto.vega.BusEvent.prototype.getParty = function() {
  return /** @type{?proto.vega.Party} */ (
    jspb.Message.getWrapperField(this, proto_vega_pb.Party, 106));
};


/** @param {?proto.vega.Party|undefined} value */
proto.vega.BusEvent.prototype.setParty = function(value) {
  jspb.Message.setOneofWrapperField(this, 106, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearParty = function() {
  this.setParty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasParty = function() {
  return jspb.Message.getField(this, 106) != null;
};


/**
 * optional Trade trade = 107;
 * @return {?proto.vega.Trade}
 */
proto.vega.BusEvent.prototype.getTrade = function() {
  return /** @type{?proto.vega.Trade} */ (
    jspb.Message.getWrapperField(this, proto_vega_pb.Trade, 107));
};


/** @param {?proto.vega.Trade|undefined} value */
proto.vega.BusEvent.prototype.setTrade = function(value) {
  jspb.Message.setOneofWrapperField(this, 107, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearTrade = function() {
  this.setTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasTrade = function() {
  return jspb.Message.getField(this, 107) != null;
};


/**
 * optional MarginLevels marginLevels = 108;
 * @return {?proto.vega.MarginLevels}
 */
proto.vega.BusEvent.prototype.getMarginlevels = function() {
  return /** @type{?proto.vega.MarginLevels} */ (
    jspb.Message.getWrapperField(this, proto_vega_pb.MarginLevels, 108));
};


/** @param {?proto.vega.MarginLevels|undefined} value */
proto.vega.BusEvent.prototype.setMarginlevels = function(value) {
  jspb.Message.setOneofWrapperField(this, 108, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearMarginlevels = function() {
  this.setMarginlevels(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasMarginlevels = function() {
  return jspb.Message.getField(this, 108) != null;
};


/**
 * optional Proposal proposal = 109;
 * @return {?proto.vega.Proposal}
 */
proto.vega.BusEvent.prototype.getProposal = function() {
  return /** @type{?proto.vega.Proposal} */ (
    jspb.Message.getWrapperField(this, proto_governance_pb.Proposal, 109));
};


/** @param {?proto.vega.Proposal|undefined} value */
proto.vega.BusEvent.prototype.setProposal = function(value) {
  jspb.Message.setOneofWrapperField(this, 109, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearProposal = function() {
  this.setProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasProposal = function() {
  return jspb.Message.getField(this, 109) != null;
};


/**
 * optional Vote vote = 110;
 * @return {?proto.vega.Vote}
 */
proto.vega.BusEvent.prototype.getVote = function() {
  return /** @type{?proto.vega.Vote} */ (
    jspb.Message.getWrapperField(this, proto_governance_pb.Vote, 110));
};


/** @param {?proto.vega.Vote|undefined} value */
proto.vega.BusEvent.prototype.setVote = function(value) {
  jspb.Message.setOneofWrapperField(this, 110, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearVote = function() {
  this.setVote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasVote = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional MarketData marketData = 111;
 * @return {?proto.vega.MarketData}
 */
proto.vega.BusEvent.prototype.getMarketdata = function() {
  return /** @type{?proto.vega.MarketData} */ (
    jspb.Message.getWrapperField(this, proto_vega_pb.MarketData, 111));
};


/** @param {?proto.vega.MarketData|undefined} value */
proto.vega.BusEvent.prototype.setMarketdata = function(value) {
  jspb.Message.setOneofWrapperField(this, 111, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearMarketdata = function() {
  this.setMarketdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasMarketdata = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * optional NodeSignature nodeSignature = 112;
 * @return {?proto.vega.NodeSignature}
 */
proto.vega.BusEvent.prototype.getNodesignature = function() {
  return /** @type{?proto.vega.NodeSignature} */ (
    jspb.Message.getWrapperField(this, proto_vega_pb.NodeSignature, 112));
};


/** @param {?proto.vega.NodeSignature|undefined} value */
proto.vega.BusEvent.prototype.setNodesignature = function(value) {
  jspb.Message.setOneofWrapperField(this, 112, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearNodesignature = function() {
  this.setNodesignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasNodesignature = function() {
  return jspb.Message.getField(this, 112) != null;
};


/**
 * optional LossSocialization lossSocialization = 113;
 * @return {?proto.vega.LossSocialization}
 */
proto.vega.BusEvent.prototype.getLosssocialization = function() {
  return /** @type{?proto.vega.LossSocialization} */ (
    jspb.Message.getWrapperField(this, proto.vega.LossSocialization, 113));
};


/** @param {?proto.vega.LossSocialization|undefined} value */
proto.vega.BusEvent.prototype.setLosssocialization = function(value) {
  jspb.Message.setOneofWrapperField(this, 113, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearLosssocialization = function() {
  this.setLosssocialization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasLosssocialization = function() {
  return jspb.Message.getField(this, 113) != null;
};


/**
 * optional SettlePosition settlePosition = 114;
 * @return {?proto.vega.SettlePosition}
 */
proto.vega.BusEvent.prototype.getSettleposition = function() {
  return /** @type{?proto.vega.SettlePosition} */ (
    jspb.Message.getWrapperField(this, proto.vega.SettlePosition, 114));
};


/** @param {?proto.vega.SettlePosition|undefined} value */
proto.vega.BusEvent.prototype.setSettleposition = function(value) {
  jspb.Message.setOneofWrapperField(this, 114, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearSettleposition = function() {
  this.setSettleposition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasSettleposition = function() {
  return jspb.Message.getField(this, 114) != null;
};


/**
 * optional SettleDistressed settleDistressed = 115;
 * @return {?proto.vega.SettleDistressed}
 */
proto.vega.BusEvent.prototype.getSettledistressed = function() {
  return /** @type{?proto.vega.SettleDistressed} */ (
    jspb.Message.getWrapperField(this, proto.vega.SettleDistressed, 115));
};


/** @param {?proto.vega.SettleDistressed|undefined} value */
proto.vega.BusEvent.prototype.setSettledistressed = function(value) {
  jspb.Message.setOneofWrapperField(this, 115, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearSettledistressed = function() {
  this.setSettledistressed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasSettledistressed = function() {
  return jspb.Message.getField(this, 115) != null;
};


/**
 * optional Market marketCreated = 116;
 * @return {?proto.vega.Market}
 */
proto.vega.BusEvent.prototype.getMarketcreated = function() {
  return /** @type{?proto.vega.Market} */ (
    jspb.Message.getWrapperField(this, proto_markets_pb.Market, 116));
};


/** @param {?proto.vega.Market|undefined} value */
proto.vega.BusEvent.prototype.setMarketcreated = function(value) {
  jspb.Message.setOneofWrapperField(this, 116, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearMarketcreated = function() {
  this.setMarketcreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasMarketcreated = function() {
  return jspb.Message.getField(this, 116) != null;
};


/**
 * optional Asset asset = 117;
 * @return {?proto.vega.Asset}
 */
proto.vega.BusEvent.prototype.getAsset = function() {
  return /** @type{?proto.vega.Asset} */ (
    jspb.Message.getWrapperField(this, proto_assets_pb.Asset, 117));
};


/** @param {?proto.vega.Asset|undefined} value */
proto.vega.BusEvent.prototype.setAsset = function(value) {
  jspb.Message.setOneofWrapperField(this, 117, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearAsset = function() {
  this.setAsset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasAsset = function() {
  return jspb.Message.getField(this, 117) != null;
};


/**
 * optional MarketTick marketTick = 118;
 * @return {?proto.vega.MarketTick}
 */
proto.vega.BusEvent.prototype.getMarkettick = function() {
  return /** @type{?proto.vega.MarketTick} */ (
    jspb.Message.getWrapperField(this, proto.vega.MarketTick, 118));
};


/** @param {?proto.vega.MarketTick|undefined} value */
proto.vega.BusEvent.prototype.setMarkettick = function(value) {
  jspb.Message.setOneofWrapperField(this, 118, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearMarkettick = function() {
  this.setMarkettick(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasMarkettick = function() {
  return jspb.Message.getField(this, 118) != null;
};


/**
 * optional Withdrawal withdrawal = 119;
 * @return {?proto.vega.Withdrawal}
 */
proto.vega.BusEvent.prototype.getWithdrawal = function() {
  return /** @type{?proto.vega.Withdrawal} */ (
    jspb.Message.getWrapperField(this, proto_vega_pb.Withdrawal, 119));
};


/** @param {?proto.vega.Withdrawal|undefined} value */
proto.vega.BusEvent.prototype.setWithdrawal = function(value) {
  jspb.Message.setOneofWrapperField(this, 119, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearWithdrawal = function() {
  this.setWithdrawal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasWithdrawal = function() {
  return jspb.Message.getField(this, 119) != null;
};


/**
 * optional Deposit deposit = 120;
 * @return {?proto.vega.Deposit}
 */
proto.vega.BusEvent.prototype.getDeposit = function() {
  return /** @type{?proto.vega.Deposit} */ (
    jspb.Message.getWrapperField(this, proto_vega_pb.Deposit, 120));
};


/** @param {?proto.vega.Deposit|undefined} value */
proto.vega.BusEvent.prototype.setDeposit = function(value) {
  jspb.Message.setOneofWrapperField(this, 120, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearDeposit = function() {
  this.setDeposit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasDeposit = function() {
  return jspb.Message.getField(this, 120) != null;
};


/**
 * optional AuctionEvent auction = 121;
 * @return {?proto.vega.AuctionEvent}
 */
proto.vega.BusEvent.prototype.getAuction = function() {
  return /** @type{?proto.vega.AuctionEvent} */ (
    jspb.Message.getWrapperField(this, proto.vega.AuctionEvent, 121));
};


/** @param {?proto.vega.AuctionEvent|undefined} value */
proto.vega.BusEvent.prototype.setAuction = function(value) {
  jspb.Message.setOneofWrapperField(this, 121, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearAuction = function() {
  this.setAuction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasAuction = function() {
  return jspb.Message.getField(this, 121) != null;
};


/**
 * optional MarketEvent market = 1001;
 * @return {?proto.vega.MarketEvent}
 */
proto.vega.BusEvent.prototype.getMarket = function() {
  return /** @type{?proto.vega.MarketEvent} */ (
    jspb.Message.getWrapperField(this, proto.vega.MarketEvent, 1001));
};


/** @param {?proto.vega.MarketEvent|undefined} value */
proto.vega.BusEvent.prototype.setMarket = function(value) {
  jspb.Message.setOneofWrapperField(this, 1001, proto.vega.BusEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.vega.BusEvent.prototype.clearMarket = function() {
  this.setMarket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vega.BusEvent.prototype.hasMarket = function() {
  return jspb.Message.getField(this, 1001) != null;
};


/**
 * @enum {number}
 */
proto.vega.BusEventType = {
  BUS_EVENT_TYPE_UNSPECIFIED: 0,
  BUS_EVENT_TYPE_ALL: 1,
  BUS_EVENT_TYPE_TIME_UPDATE: 2,
  BUS_EVENT_TYPE_TRANSFER_RESPONSES: 3,
  BUS_EVENT_TYPE_POSITION_RESOLUTION: 4,
  BUS_EVENT_TYPE_ORDER: 5,
  BUS_EVENT_TYPE_ACCOUNT: 6,
  BUS_EVENT_TYPE_PARTY: 7,
  BUS_EVENT_TYPE_TRADE: 8,
  BUS_EVENT_TYPE_MARGIN_LEVELS: 9,
  BUS_EVENT_TYPE_PROPOSAL: 10,
  BUS_EVENT_TYPE_VOTE: 11,
  BUS_EVENT_TYPE_MARKET_DATA: 12,
  BUS_EVENT_TYPE_NODE_SIGNATURE: 13,
  BUS_EVENT_TYPE_LOSS_SOCIALIZATION: 14,
  BUS_EVENT_TYPE_SETTLE_POSITION: 15,
  BUS_EVENT_TYPE_SETTLE_DISTRESSED: 16,
  BUS_EVENT_TYPE_MARKET_CREATED: 17,
  BUS_EVENT_TYPE_ASSET: 18,
  BUS_EVENT_TYPE_MARKET_TICK: 19,
  BUS_EVENT_TYPE_WITHDRAWAL: 20,
  BUS_EVENT_TYPE_DEPOSIT: 21,
  BUS_EVENT_TYPE_AUCTION: 22,
  BUS_EVENT_TYPE_MARKET: 101
};

goog.object.extend(exports, proto.vega);
