// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/assets.proto

#include "proto/assets.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_proto_2fassets_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BuiltinAsset_proto_2fassets_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fassets_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ERC20_proto_2fassets_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fassets_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_AssetSource_proto_2fassets_2eproto;
namespace vega {
class AssetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Asset> _instance;
  const ::vega::BuiltinAsset* builtinasset_;
  const ::vega::ERC20* erc20_;
} _Asset_default_instance_;
class AssetSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssetSource> _instance;
  const ::vega::BuiltinAsset* builtinasset_;
  const ::vega::ERC20* erc20_;
} _AssetSource_default_instance_;
class BuiltinAssetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuiltinAsset> _instance;
} _BuiltinAsset_default_instance_;
class ERC20DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ERC20> _instance;
} _ERC20_default_instance_;
class DevAssetsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DevAssets> _instance;
} _DevAssets_default_instance_;
}  // namespace vega
static void InitDefaultsAsset_proto_2fassets_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_Asset_default_instance_;
    new (ptr) ::vega::Asset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::Asset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Asset_proto_2fassets_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAsset_proto_2fassets_2eproto}, {
      &scc_info_BuiltinAsset_proto_2fassets_2eproto.base,
      &scc_info_ERC20_proto_2fassets_2eproto.base,}};

static void InitDefaultsAssetSource_proto_2fassets_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_AssetSource_default_instance_;
    new (ptr) ::vega::AssetSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::AssetSource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AssetSource_proto_2fassets_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAssetSource_proto_2fassets_2eproto}, {
      &scc_info_BuiltinAsset_proto_2fassets_2eproto.base,
      &scc_info_ERC20_proto_2fassets_2eproto.base,}};

static void InitDefaultsBuiltinAsset_proto_2fassets_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_BuiltinAsset_default_instance_;
    new (ptr) ::vega::BuiltinAsset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::BuiltinAsset::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BuiltinAsset_proto_2fassets_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBuiltinAsset_proto_2fassets_2eproto}, {}};

static void InitDefaultsERC20_proto_2fassets_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_ERC20_default_instance_;
    new (ptr) ::vega::ERC20();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::ERC20::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ERC20_proto_2fassets_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsERC20_proto_2fassets_2eproto}, {}};

static void InitDefaultsDevAssets_proto_2fassets_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_DevAssets_default_instance_;
    new (ptr) ::vega::DevAssets();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::DevAssets::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DevAssets_proto_2fassets_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDevAssets_proto_2fassets_2eproto}, {
      &scc_info_AssetSource_proto_2fassets_2eproto.base,}};

void InitDefaults_proto_2fassets_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Asset_proto_2fassets_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssetSource_proto_2fassets_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BuiltinAsset_proto_2fassets_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ERC20_proto_2fassets_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DevAssets_proto_2fassets_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_proto_2fassets_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_proto_2fassets_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_proto_2fassets_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_proto_2fassets_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::Asset, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::vega::Asset, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::Asset, id_),
  PROTOBUF_FIELD_OFFSET(::vega::Asset, name_),
  PROTOBUF_FIELD_OFFSET(::vega::Asset, symbol_),
  PROTOBUF_FIELD_OFFSET(::vega::Asset, totalsupply_),
  PROTOBUF_FIELD_OFFSET(::vega::Asset, decimals_),
  offsetof(::vega::AssetDefaultTypeInternal, builtinasset_),
  offsetof(::vega::AssetDefaultTypeInternal, erc20_),
  PROTOBUF_FIELD_OFFSET(::vega::Asset, source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::AssetSource, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::vega::AssetSource, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::vega::AssetSourceDefaultTypeInternal, builtinasset_),
  offsetof(::vega::AssetSourceDefaultTypeInternal, erc20_),
  PROTOBUF_FIELD_OFFSET(::vega::AssetSource, source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::BuiltinAsset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::BuiltinAsset, name_),
  PROTOBUF_FIELD_OFFSET(::vega::BuiltinAsset, symbol_),
  PROTOBUF_FIELD_OFFSET(::vega::BuiltinAsset, totalsupply_),
  PROTOBUF_FIELD_OFFSET(::vega::BuiltinAsset, decimals_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::ERC20, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::ERC20, contractaddress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::DevAssets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::DevAssets, sources_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::vega::Asset)},
  { 13, -1, sizeof(::vega::AssetSource)},
  { 21, -1, sizeof(::vega::BuiltinAsset)},
  { 30, -1, sizeof(::vega::ERC20)},
  { 36, -1, sizeof(::vega::DevAssets)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_Asset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_AssetSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_BuiltinAsset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_ERC20_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_DevAssets_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_proto_2fassets_2eproto = {
  {}, AddDescriptors_proto_2fassets_2eproto, "proto/assets.proto", schemas,
  file_default_instances, TableStruct_proto_2fassets_2eproto::offsets,
  file_level_metadata_proto_2fassets_2eproto, 5, file_level_enum_descriptors_proto_2fassets_2eproto, file_level_service_descriptors_proto_2fassets_2eproto,
};

const char descriptor_table_protodef_proto_2fassets_2eproto[] =
  "\n\022proto/assets.proto\022\004vega\"\254\001\n\005Asset\022\n\n\002"
  "ID\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\016\n\006symbol\030\003 \001(\t\022\023"
  "\n\013totalSupply\030\004 \001(\t\022\020\n\010decimals\030\005 \001(\004\022*\n"
  "\014builtinAsset\030e \001(\0132\022.vega.BuiltinAssetH"
  "\000\022\034\n\005erc20\030f \001(\0132\013.vega.ERC20H\000B\010\n\006sourc"
  "e\"a\n\013AssetSource\022*\n\014builtinAsset\030\001 \001(\0132\022"
  ".vega.BuiltinAssetH\000\022\034\n\005erc20\030\002 \001(\0132\013.ve"
  "ga.ERC20H\000B\010\n\006source\"S\n\014BuiltinAsset\022\014\n\004"
  "name\030\001 \001(\t\022\016\n\006symbol\030\002 \001(\t\022\023\n\013totalSuppl"
  "y\030\003 \001(\t\022\020\n\010decimals\030\004 \001(\004\" \n\005ERC20\022\027\n\017co"
  "ntractAddress\030\001 \001(\t\"/\n\tDevAssets\022\"\n\007sour"
  "ces\030\001 \003(\0132\021.vega.AssetSourceB!Z\037code.veg"
  "aprotocol.io/vega/protob\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_proto_2fassets_2eproto = {
  false, InitDefaults_proto_2fassets_2eproto, 
  descriptor_table_protodef_proto_2fassets_2eproto,
  "proto/assets.proto", &assign_descriptors_table_proto_2fassets_2eproto, 511,
};

void AddDescriptors_proto_2fassets_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_proto_2fassets_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fassets_2eproto = []() { AddDescriptors_proto_2fassets_2eproto(); return true; }();
namespace vega {

// ===================================================================

void Asset::InitAsDefaultInstance() {
  ::vega::_Asset_default_instance_.builtinasset_ = const_cast< ::vega::BuiltinAsset*>(
      ::vega::BuiltinAsset::internal_default_instance());
  ::vega::_Asset_default_instance_.erc20_ = const_cast< ::vega::ERC20*>(
      ::vega::ERC20::internal_default_instance());
}
class Asset::HasBitSetters {
 public:
  static const ::vega::BuiltinAsset& builtinasset(const Asset* msg);
  static const ::vega::ERC20& erc20(const Asset* msg);
};

const ::vega::BuiltinAsset&
Asset::HasBitSetters::builtinasset(const Asset* msg) {
  return *msg->source_.builtinasset_;
}
const ::vega::ERC20&
Asset::HasBitSetters::erc20(const Asset* msg) {
  return *msg->source_.erc20_;
}
void Asset::set_allocated_builtinasset(::vega::BuiltinAsset* builtinasset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_source();
  if (builtinasset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      builtinasset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, builtinasset, submessage_arena);
    }
    set_has_builtinasset();
    source_.builtinasset_ = builtinasset;
  }
  // @@protoc_insertion_point(field_set_allocated:vega.Asset.builtinAsset)
}
void Asset::set_allocated_erc20(::vega::ERC20* erc20) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_source();
  if (erc20) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      erc20 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, erc20, submessage_arena);
    }
    set_has_erc20();
    source_.erc20_ = erc20;
  }
  // @@protoc_insertion_point(field_set_allocated:vega.Asset.erc20)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Asset::kIDFieldNumber;
const int Asset::kNameFieldNumber;
const int Asset::kSymbolFieldNumber;
const int Asset::kTotalSupplyFieldNumber;
const int Asset::kDecimalsFieldNumber;
const int Asset::kBuiltinAssetFieldNumber;
const int Asset::kErc20FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Asset::Asset()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.Asset)
}
Asset::Asset(const Asset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  totalsupply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.totalsupply().size() > 0) {
    totalsupply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.totalsupply_);
  }
  decimals_ = from.decimals_;
  clear_has_source();
  switch (from.source_case()) {
    case kBuiltinAsset: {
      mutable_builtinasset()->::vega::BuiltinAsset::MergeFrom(from.builtinasset());
      break;
    }
    case kErc20: {
      mutable_erc20()->::vega::ERC20::MergeFrom(from.erc20());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:vega.Asset)
}

void Asset::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Asset_proto_2fassets_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalsupply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decimals_ = PROTOBUF_ULONGLONG(0);
  clear_has_source();
}

Asset::~Asset() {
  // @@protoc_insertion_point(destructor:vega.Asset)
  SharedDtor();
}

void Asset::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalsupply_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_source()) {
    clear_source();
  }
}

void Asset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Asset& Asset::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Asset_proto_2fassets_2eproto.base);
  return *internal_default_instance();
}


void Asset::clear_source() {
// @@protoc_insertion_point(one_of_clear_start:vega.Asset)
  switch (source_case()) {
    case kBuiltinAsset: {
      delete source_.builtinasset_;
      break;
    }
    case kErc20: {
      delete source_.erc20_;
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SOURCE_NOT_SET;
}


void Asset::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.Asset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalsupply_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decimals_ = PROTOBUF_ULONGLONG(0);
  clear_source();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Asset::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Asset*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string ID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.Asset.ID");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.Asset.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string symbol = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.Asset.symbol");
        object = msg->mutable_symbol();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string totalSupply = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.Asset.totalSupply");
        object = msg->mutable_totalsupply();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint64 decimals = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_decimals(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .vega.BuiltinAsset builtinAsset = 101;
      case 101: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::BuiltinAsset::_InternalParse;
        object = msg->mutable_builtinasset();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .vega.ERC20 erc20 = 102;
      case 102: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::ERC20::_InternalParse;
        object = msg->mutable_erc20();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Asset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.Asset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.Asset.ID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.Asset.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.Asset.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string totalSupply = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalsupply()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->totalsupply().data(), static_cast<int>(this->totalsupply().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.Asset.totalSupply"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 decimals = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &decimals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.BuiltinAsset builtinAsset = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (810 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_builtinasset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.ERC20 erc20 = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (818 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_erc20()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.Asset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.Asset)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Asset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.Asset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ID = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.Asset.ID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.Asset.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string symbol = 3;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.Asset.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->symbol(), output);
  }

  // string totalSupply = 4;
  if (this->totalsupply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->totalsupply().data(), static_cast<int>(this->totalsupply().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.Asset.totalSupply");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->totalsupply(), output);
  }

  // uint64 decimals = 5;
  if (this->decimals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->decimals(), output);
  }

  // .vega.BuiltinAsset builtinAsset = 101;
  if (has_builtinasset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, HasBitSetters::builtinasset(this), output);
  }

  // .vega.ERC20 erc20 = 102;
  if (has_erc20()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, HasBitSetters::erc20(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.Asset)
}

::google::protobuf::uint8* Asset::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.Asset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ID = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.Asset.ID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.Asset.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string symbol = 3;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.Asset.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->symbol(), target);
  }

  // string totalSupply = 4;
  if (this->totalsupply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->totalsupply().data(), static_cast<int>(this->totalsupply().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.Asset.totalSupply");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->totalsupply(), target);
  }

  // uint64 decimals = 5;
  if (this->decimals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->decimals(), target);
  }

  // .vega.BuiltinAsset builtinAsset = 101;
  if (has_builtinasset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101, HasBitSetters::builtinasset(this), target);
  }

  // .vega.ERC20 erc20 = 102;
  if (has_erc20()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        102, HasBitSetters::erc20(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.Asset)
  return target;
}

size_t Asset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.Asset)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ID = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string symbol = 3;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string totalSupply = 4;
  if (this->totalsupply().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->totalsupply());
  }

  // uint64 decimals = 5;
  if (this->decimals() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->decimals());
  }

  switch (source_case()) {
    // .vega.BuiltinAsset builtinAsset = 101;
    case kBuiltinAsset: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_.builtinasset_);
      break;
    }
    // .vega.ERC20 erc20 = 102;
    case kErc20: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_.erc20_);
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Asset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.Asset)
  GOOGLE_DCHECK_NE(&from, this);
  const Asset* source =
      ::google::protobuf::DynamicCastToGenerated<Asset>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.Asset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.Asset)
    MergeFrom(*source);
  }
}

void Asset::MergeFrom(const Asset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.Asset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.totalsupply().size() > 0) {

    totalsupply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.totalsupply_);
  }
  if (from.decimals() != 0) {
    set_decimals(from.decimals());
  }
  switch (from.source_case()) {
    case kBuiltinAsset: {
      mutable_builtinasset()->::vega::BuiltinAsset::MergeFrom(from.builtinasset());
      break;
    }
    case kErc20: {
      mutable_erc20()->::vega::ERC20::MergeFrom(from.erc20());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
}

void Asset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.Asset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Asset::CopyFrom(const Asset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.Asset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Asset::IsInitialized() const {
  return true;
}

void Asset::Swap(Asset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Asset::InternalSwap(Asset* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  totalsupply_.Swap(&other->totalsupply_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(decimals_, other->decimals_);
  swap(source_, other->source_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata Asset::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fassets_2eproto);
  return ::file_level_metadata_proto_2fassets_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AssetSource::InitAsDefaultInstance() {
  ::vega::_AssetSource_default_instance_.builtinasset_ = const_cast< ::vega::BuiltinAsset*>(
      ::vega::BuiltinAsset::internal_default_instance());
  ::vega::_AssetSource_default_instance_.erc20_ = const_cast< ::vega::ERC20*>(
      ::vega::ERC20::internal_default_instance());
}
class AssetSource::HasBitSetters {
 public:
  static const ::vega::BuiltinAsset& builtinasset(const AssetSource* msg);
  static const ::vega::ERC20& erc20(const AssetSource* msg);
};

const ::vega::BuiltinAsset&
AssetSource::HasBitSetters::builtinasset(const AssetSource* msg) {
  return *msg->source_.builtinasset_;
}
const ::vega::ERC20&
AssetSource::HasBitSetters::erc20(const AssetSource* msg) {
  return *msg->source_.erc20_;
}
void AssetSource::set_allocated_builtinasset(::vega::BuiltinAsset* builtinasset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_source();
  if (builtinasset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      builtinasset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, builtinasset, submessage_arena);
    }
    set_has_builtinasset();
    source_.builtinasset_ = builtinasset;
  }
  // @@protoc_insertion_point(field_set_allocated:vega.AssetSource.builtinAsset)
}
void AssetSource::set_allocated_erc20(::vega::ERC20* erc20) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_source();
  if (erc20) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      erc20 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, erc20, submessage_arena);
    }
    set_has_erc20();
    source_.erc20_ = erc20;
  }
  // @@protoc_insertion_point(field_set_allocated:vega.AssetSource.erc20)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssetSource::kBuiltinAssetFieldNumber;
const int AssetSource::kErc20FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssetSource::AssetSource()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.AssetSource)
}
AssetSource::AssetSource(const AssetSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_source();
  switch (from.source_case()) {
    case kBuiltinAsset: {
      mutable_builtinasset()->::vega::BuiltinAsset::MergeFrom(from.builtinasset());
      break;
    }
    case kErc20: {
      mutable_erc20()->::vega::ERC20::MergeFrom(from.erc20());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:vega.AssetSource)
}

void AssetSource::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AssetSource_proto_2fassets_2eproto.base);
  clear_has_source();
}

AssetSource::~AssetSource() {
  // @@protoc_insertion_point(destructor:vega.AssetSource)
  SharedDtor();
}

void AssetSource::SharedDtor() {
  if (has_source()) {
    clear_source();
  }
}

void AssetSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AssetSource& AssetSource::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AssetSource_proto_2fassets_2eproto.base);
  return *internal_default_instance();
}


void AssetSource::clear_source() {
// @@protoc_insertion_point(one_of_clear_start:vega.AssetSource)
  switch (source_case()) {
    case kBuiltinAsset: {
      delete source_.builtinasset_;
      break;
    }
    case kErc20: {
      delete source_.erc20_;
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SOURCE_NOT_SET;
}


void AssetSource::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.AssetSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_source();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AssetSource::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AssetSource*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .vega.BuiltinAsset builtinAsset = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::BuiltinAsset::_InternalParse;
        object = msg->mutable_builtinasset();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .vega.ERC20 erc20 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::ERC20::_InternalParse;
        object = msg->mutable_erc20();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AssetSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.AssetSource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .vega.BuiltinAsset builtinAsset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_builtinasset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.ERC20 erc20 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_erc20()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.AssetSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.AssetSource)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AssetSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.AssetSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.BuiltinAsset builtinAsset = 1;
  if (has_builtinasset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::builtinasset(this), output);
  }

  // .vega.ERC20 erc20 = 2;
  if (has_erc20()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::erc20(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.AssetSource)
}

::google::protobuf::uint8* AssetSource::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.AssetSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.BuiltinAsset builtinAsset = 1;
  if (has_builtinasset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::builtinasset(this), target);
  }

  // .vega.ERC20 erc20 = 2;
  if (has_erc20()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::erc20(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.AssetSource)
  return target;
}

size_t AssetSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.AssetSource)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (source_case()) {
    // .vega.BuiltinAsset builtinAsset = 1;
    case kBuiltinAsset: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_.builtinasset_);
      break;
    }
    // .vega.ERC20 erc20 = 2;
    case kErc20: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_.erc20_);
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssetSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.AssetSource)
  GOOGLE_DCHECK_NE(&from, this);
  const AssetSource* source =
      ::google::protobuf::DynamicCastToGenerated<AssetSource>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.AssetSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.AssetSource)
    MergeFrom(*source);
  }
}

void AssetSource::MergeFrom(const AssetSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.AssetSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.source_case()) {
    case kBuiltinAsset: {
      mutable_builtinasset()->::vega::BuiltinAsset::MergeFrom(from.builtinasset());
      break;
    }
    case kErc20: {
      mutable_erc20()->::vega::ERC20::MergeFrom(from.erc20());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
}

void AssetSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.AssetSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssetSource::CopyFrom(const AssetSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.AssetSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetSource::IsInitialized() const {
  return true;
}

void AssetSource::Swap(AssetSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssetSource::InternalSwap(AssetSource* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(source_, other->source_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata AssetSource::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fassets_2eproto);
  return ::file_level_metadata_proto_2fassets_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BuiltinAsset::InitAsDefaultInstance() {
}
class BuiltinAsset::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuiltinAsset::kNameFieldNumber;
const int BuiltinAsset::kSymbolFieldNumber;
const int BuiltinAsset::kTotalSupplyFieldNumber;
const int BuiltinAsset::kDecimalsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuiltinAsset::BuiltinAsset()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.BuiltinAsset)
}
BuiltinAsset::BuiltinAsset(const BuiltinAsset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  totalsupply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.totalsupply().size() > 0) {
    totalsupply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.totalsupply_);
  }
  decimals_ = from.decimals_;
  // @@protoc_insertion_point(copy_constructor:vega.BuiltinAsset)
}

void BuiltinAsset::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BuiltinAsset_proto_2fassets_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalsupply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decimals_ = PROTOBUF_ULONGLONG(0);
}

BuiltinAsset::~BuiltinAsset() {
  // @@protoc_insertion_point(destructor:vega.BuiltinAsset)
  SharedDtor();
}

void BuiltinAsset::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalsupply_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BuiltinAsset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BuiltinAsset& BuiltinAsset::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BuiltinAsset_proto_2fassets_2eproto.base);
  return *internal_default_instance();
}


void BuiltinAsset::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.BuiltinAsset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalsupply_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decimals_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BuiltinAsset::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BuiltinAsset*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.BuiltinAsset.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string symbol = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.BuiltinAsset.symbol");
        object = msg->mutable_symbol();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string totalSupply = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.BuiltinAsset.totalSupply");
        object = msg->mutable_totalsupply();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint64 decimals = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_decimals(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BuiltinAsset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.BuiltinAsset)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.BuiltinAsset.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.BuiltinAsset.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string totalSupply = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalsupply()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->totalsupply().data(), static_cast<int>(this->totalsupply().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.BuiltinAsset.totalSupply"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 decimals = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &decimals_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.BuiltinAsset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.BuiltinAsset)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BuiltinAsset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.BuiltinAsset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.BuiltinAsset.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.BuiltinAsset.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->symbol(), output);
  }

  // string totalSupply = 3;
  if (this->totalsupply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->totalsupply().data(), static_cast<int>(this->totalsupply().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.BuiltinAsset.totalSupply");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->totalsupply(), output);
  }

  // uint64 decimals = 4;
  if (this->decimals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->decimals(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.BuiltinAsset)
}

::google::protobuf::uint8* BuiltinAsset::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.BuiltinAsset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.BuiltinAsset.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.BuiltinAsset.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->symbol(), target);
  }

  // string totalSupply = 3;
  if (this->totalsupply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->totalsupply().data(), static_cast<int>(this->totalsupply().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.BuiltinAsset.totalSupply");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->totalsupply(), target);
  }

  // uint64 decimals = 4;
  if (this->decimals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->decimals(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.BuiltinAsset)
  return target;
}

size_t BuiltinAsset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.BuiltinAsset)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string symbol = 2;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // string totalSupply = 3;
  if (this->totalsupply().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->totalsupply());
  }

  // uint64 decimals = 4;
  if (this->decimals() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->decimals());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuiltinAsset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.BuiltinAsset)
  GOOGLE_DCHECK_NE(&from, this);
  const BuiltinAsset* source =
      ::google::protobuf::DynamicCastToGenerated<BuiltinAsset>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.BuiltinAsset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.BuiltinAsset)
    MergeFrom(*source);
  }
}

void BuiltinAsset::MergeFrom(const BuiltinAsset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.BuiltinAsset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.totalsupply().size() > 0) {

    totalsupply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.totalsupply_);
  }
  if (from.decimals() != 0) {
    set_decimals(from.decimals());
  }
}

void BuiltinAsset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.BuiltinAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuiltinAsset::CopyFrom(const BuiltinAsset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.BuiltinAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuiltinAsset::IsInitialized() const {
  return true;
}

void BuiltinAsset::Swap(BuiltinAsset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuiltinAsset::InternalSwap(BuiltinAsset* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  totalsupply_.Swap(&other->totalsupply_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(decimals_, other->decimals_);
}

::google::protobuf::Metadata BuiltinAsset::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fassets_2eproto);
  return ::file_level_metadata_proto_2fassets_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ERC20::InitAsDefaultInstance() {
}
class ERC20::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ERC20::kContractAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ERC20::ERC20()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.ERC20)
}
ERC20::ERC20(const ERC20& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  contractaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contractaddress().size() > 0) {
    contractaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractaddress_);
  }
  // @@protoc_insertion_point(copy_constructor:vega.ERC20)
}

void ERC20::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ERC20_proto_2fassets_2eproto.base);
  contractaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ERC20::~ERC20() {
  // @@protoc_insertion_point(destructor:vega.ERC20)
  SharedDtor();
}

void ERC20::SharedDtor() {
  contractaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ERC20::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ERC20& ERC20::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ERC20_proto_2fassets_2eproto.base);
  return *internal_default_instance();
}


void ERC20::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.ERC20)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contractaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ERC20::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ERC20*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string contractAddress = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.ERC20.contractAddress");
        object = msg->mutable_contractaddress();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ERC20::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.ERC20)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string contractAddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contractaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contractaddress().data(), static_cast<int>(this->contractaddress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.ERC20.contractAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.ERC20)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.ERC20)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ERC20::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.ERC20)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string contractAddress = 1;
  if (this->contractaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractaddress().data(), static_cast<int>(this->contractaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.ERC20.contractAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->contractaddress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.ERC20)
}

::google::protobuf::uint8* ERC20::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.ERC20)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string contractAddress = 1;
  if (this->contractaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractaddress().data(), static_cast<int>(this->contractaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.ERC20.contractAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->contractaddress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.ERC20)
  return target;
}

size_t ERC20::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.ERC20)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string contractAddress = 1;
  if (this->contractaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contractaddress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ERC20::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.ERC20)
  GOOGLE_DCHECK_NE(&from, this);
  const ERC20* source =
      ::google::protobuf::DynamicCastToGenerated<ERC20>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.ERC20)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.ERC20)
    MergeFrom(*source);
  }
}

void ERC20::MergeFrom(const ERC20& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.ERC20)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.contractaddress().size() > 0) {

    contractaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractaddress_);
  }
}

void ERC20::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.ERC20)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ERC20::CopyFrom(const ERC20& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.ERC20)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ERC20::IsInitialized() const {
  return true;
}

void ERC20::Swap(ERC20* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ERC20::InternalSwap(ERC20* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  contractaddress_.Swap(&other->contractaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ERC20::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fassets_2eproto);
  return ::file_level_metadata_proto_2fassets_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DevAssets::InitAsDefaultInstance() {
}
class DevAssets::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DevAssets::kSourcesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DevAssets::DevAssets()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.DevAssets)
}
DevAssets::DevAssets(const DevAssets& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      sources_(from.sources_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vega.DevAssets)
}

void DevAssets::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DevAssets_proto_2fassets_2eproto.base);
}

DevAssets::~DevAssets() {
  // @@protoc_insertion_point(destructor:vega.DevAssets)
  SharedDtor();
}

void DevAssets::SharedDtor() {
}

void DevAssets::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DevAssets& DevAssets::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DevAssets_proto_2fassets_2eproto.base);
  return *internal_default_instance();
}


void DevAssets::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.DevAssets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sources_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DevAssets::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DevAssets*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .vega.AssetSource sources = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::vega::AssetSource::_InternalParse;
          object = msg->add_sources();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DevAssets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.DevAssets)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .vega.AssetSource sources = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.DevAssets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.DevAssets)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DevAssets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.DevAssets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vega.AssetSource sources = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sources(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.DevAssets)
}

::google::protobuf::uint8* DevAssets::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.DevAssets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vega.AssetSource sources = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sources_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sources(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.DevAssets)
  return target;
}

size_t DevAssets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.DevAssets)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vega.AssetSource sources = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sources(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DevAssets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.DevAssets)
  GOOGLE_DCHECK_NE(&from, this);
  const DevAssets* source =
      ::google::protobuf::DynamicCastToGenerated<DevAssets>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.DevAssets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.DevAssets)
    MergeFrom(*source);
  }
}

void DevAssets::MergeFrom(const DevAssets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.DevAssets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sources_.MergeFrom(from.sources_);
}

void DevAssets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.DevAssets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevAssets::CopyFrom(const DevAssets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.DevAssets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevAssets::IsInitialized() const {
  return true;
}

void DevAssets::Swap(DevAssets* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DevAssets::InternalSwap(DevAssets* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&sources_)->InternalSwap(CastToBase(&other->sources_));
}

::google::protobuf::Metadata DevAssets::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2fassets_2eproto);
  return ::file_level_metadata_proto_2fassets_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace vega
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::vega::Asset* Arena::CreateMaybeMessage< ::vega::Asset >(Arena* arena) {
  return Arena::CreateInternal< ::vega::Asset >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::AssetSource* Arena::CreateMaybeMessage< ::vega::AssetSource >(Arena* arena) {
  return Arena::CreateInternal< ::vega::AssetSource >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::BuiltinAsset* Arena::CreateMaybeMessage< ::vega::BuiltinAsset >(Arena* arena) {
  return Arena::CreateInternal< ::vega::BuiltinAsset >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::ERC20* Arena::CreateMaybeMessage< ::vega::ERC20 >(Arena* arena) {
  return Arena::CreateInternal< ::vega::ERC20 >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::DevAssets* Arena::CreateMaybeMessage< ::vega::DevAssets >(Arena* arena) {
  return Arena::CreateInternal< ::vega::DevAssets >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
