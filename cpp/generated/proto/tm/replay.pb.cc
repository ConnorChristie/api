// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/tm/replay.proto

#include "proto/tm/replay.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BlockParams_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EventAttribute_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EvidenceParams_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Header_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PublicKey_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RequestDeliverTx_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ValidatorParams_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Validator_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VersionParams_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Event_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Evidence_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LastCommitInfo_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ResponseBeginBlock_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ResponseDeliverTx_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ValidatorUpdate_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VoteInfo_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RequestInitChain_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ResponseInitChain_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_RequestBeginBlock_proto_2ftm_2freplay_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2ftm_2freplay_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_ConsensusParams_proto_2ftm_2freplay_2eproto;
namespace vega {
class TmEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TmEvent> _instance;
  const ::vega::RequestInitChain* reqinitchain_;
  const ::vega::ResponseInitChain* resinitchain_;
  const ::vega::RequestDeliverTx* reqdelivertx_;
  const ::vega::ResponseDeliverTx* resdelivertx_;
  const ::vega::RequestBeginBlock* reqbeginblock_;
  const ::vega::ResponseBeginBlock* resbeginblock_;
} _TmEvent_default_instance_;
class RequestInitChainDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestInitChain> _instance;
} _RequestInitChain_default_instance_;
class RequestBeginBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestBeginBlock> _instance;
} _RequestBeginBlock_default_instance_;
class RequestDeliverTxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestDeliverTx> _instance;
} _RequestDeliverTx_default_instance_;
class ResponseInitChainDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseInitChain> _instance;
} _ResponseInitChain_default_instance_;
class ResponseBeginBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseBeginBlock> _instance;
} _ResponseBeginBlock_default_instance_;
class ResponseDeliverTxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseDeliverTx> _instance;
} _ResponseDeliverTx_default_instance_;
class EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Event> _instance;
} _Event_default_instance_;
class EventAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventAttribute> _instance;
} _EventAttribute_default_instance_;
class ValidatorUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidatorUpdate> _instance;
} _ValidatorUpdate_default_instance_;
class ConsensusParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConsensusParams> _instance;
} _ConsensusParams_default_instance_;
class BlockParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockParams> _instance;
} _BlockParams_default_instance_;
class EvidenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Evidence> _instance;
} _Evidence_default_instance_;
class ValidatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Validator> _instance;
} _Validator_default_instance_;
class LastCommitInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LastCommitInfo> _instance;
} _LastCommitInfo_default_instance_;
class VoteInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VoteInfo> _instance;
} _VoteInfo_default_instance_;
class EvidenceParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EvidenceParams> _instance;
} _EvidenceParams_default_instance_;
class ValidatorParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidatorParams> _instance;
} _ValidatorParams_default_instance_;
class VersionParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VersionParams> _instance;
} _VersionParams_default_instance_;
class HeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Header> _instance;
} _Header_default_instance_;
class PublicKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublicKey> _instance;
  ::google::protobuf::internal::ArenaStringPtr ed25519_;
} _PublicKey_default_instance_;
}  // namespace vega
static void InitDefaultsTmEvent_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_TmEvent_default_instance_;
    new (ptr) ::vega::TmEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::TmEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_TmEvent_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsTmEvent_proto_2ftm_2freplay_2eproto}, {
      &scc_info_RequestInitChain_proto_2ftm_2freplay_2eproto.base,
      &scc_info_ResponseInitChain_proto_2ftm_2freplay_2eproto.base,
      &scc_info_RequestDeliverTx_proto_2ftm_2freplay_2eproto.base,
      &scc_info_ResponseDeliverTx_proto_2ftm_2freplay_2eproto.base,
      &scc_info_RequestBeginBlock_proto_2ftm_2freplay_2eproto.base,
      &scc_info_ResponseBeginBlock_proto_2ftm_2freplay_2eproto.base,}};

static void InitDefaultsRequestInitChain_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_RequestInitChain_default_instance_;
    new (ptr) ::vega::RequestInitChain();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::RequestInitChain::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RequestInitChain_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRequestInitChain_proto_2ftm_2freplay_2eproto}, {
      &scc_info_ConsensusParams_proto_2ftm_2freplay_2eproto.base,
      &scc_info_ValidatorUpdate_proto_2ftm_2freplay_2eproto.base,}};

static void InitDefaultsRequestBeginBlock_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_RequestBeginBlock_default_instance_;
    new (ptr) ::vega::RequestBeginBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::RequestBeginBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RequestBeginBlock_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRequestBeginBlock_proto_2ftm_2freplay_2eproto}, {
      &scc_info_Header_proto_2ftm_2freplay_2eproto.base,
      &scc_info_LastCommitInfo_proto_2ftm_2freplay_2eproto.base,
      &scc_info_Evidence_proto_2ftm_2freplay_2eproto.base,}};

static void InitDefaultsRequestDeliverTx_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_RequestDeliverTx_default_instance_;
    new (ptr) ::vega::RequestDeliverTx();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::RequestDeliverTx::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RequestDeliverTx_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequestDeliverTx_proto_2ftm_2freplay_2eproto}, {}};

static void InitDefaultsResponseInitChain_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_ResponseInitChain_default_instance_;
    new (ptr) ::vega::ResponseInitChain();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::ResponseInitChain::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ResponseInitChain_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsResponseInitChain_proto_2ftm_2freplay_2eproto}, {
      &scc_info_ConsensusParams_proto_2ftm_2freplay_2eproto.base,
      &scc_info_ValidatorUpdate_proto_2ftm_2freplay_2eproto.base,}};

static void InitDefaultsResponseBeginBlock_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_ResponseBeginBlock_default_instance_;
    new (ptr) ::vega::ResponseBeginBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::ResponseBeginBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResponseBeginBlock_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResponseBeginBlock_proto_2ftm_2freplay_2eproto}, {
      &scc_info_Event_proto_2ftm_2freplay_2eproto.base,}};

static void InitDefaultsResponseDeliverTx_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_ResponseDeliverTx_default_instance_;
    new (ptr) ::vega::ResponseDeliverTx();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::ResponseDeliverTx::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResponseDeliverTx_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResponseDeliverTx_proto_2ftm_2freplay_2eproto}, {
      &scc_info_Event_proto_2ftm_2freplay_2eproto.base,}};

static void InitDefaultsEvent_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_Event_default_instance_;
    new (ptr) ::vega::Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Event_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEvent_proto_2ftm_2freplay_2eproto}, {
      &scc_info_EventAttribute_proto_2ftm_2freplay_2eproto.base,}};

static void InitDefaultsEventAttribute_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_EventAttribute_default_instance_;
    new (ptr) ::vega::EventAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::EventAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EventAttribute_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEventAttribute_proto_2ftm_2freplay_2eproto}, {}};

static void InitDefaultsValidatorUpdate_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_ValidatorUpdate_default_instance_;
    new (ptr) ::vega::ValidatorUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::ValidatorUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ValidatorUpdate_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValidatorUpdate_proto_2ftm_2freplay_2eproto}, {
      &scc_info_PublicKey_proto_2ftm_2freplay_2eproto.base,}};

static void InitDefaultsConsensusParams_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_ConsensusParams_default_instance_;
    new (ptr) ::vega::ConsensusParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::ConsensusParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_ConsensusParams_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsConsensusParams_proto_2ftm_2freplay_2eproto}, {
      &scc_info_BlockParams_proto_2ftm_2freplay_2eproto.base,
      &scc_info_EvidenceParams_proto_2ftm_2freplay_2eproto.base,
      &scc_info_ValidatorParams_proto_2ftm_2freplay_2eproto.base,
      &scc_info_VersionParams_proto_2ftm_2freplay_2eproto.base,}};

static void InitDefaultsBlockParams_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_BlockParams_default_instance_;
    new (ptr) ::vega::BlockParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::BlockParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BlockParams_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBlockParams_proto_2ftm_2freplay_2eproto}, {}};

static void InitDefaultsEvidence_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_Evidence_default_instance_;
    new (ptr) ::vega::Evidence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::Evidence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Evidence_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEvidence_proto_2ftm_2freplay_2eproto}, {
      &scc_info_Validator_proto_2ftm_2freplay_2eproto.base,}};

static void InitDefaultsValidator_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_Validator_default_instance_;
    new (ptr) ::vega::Validator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::Validator::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Validator_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValidator_proto_2ftm_2freplay_2eproto}, {}};

static void InitDefaultsLastCommitInfo_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_LastCommitInfo_default_instance_;
    new (ptr) ::vega::LastCommitInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::LastCommitInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LastCommitInfo_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLastCommitInfo_proto_2ftm_2freplay_2eproto}, {
      &scc_info_VoteInfo_proto_2ftm_2freplay_2eproto.base,}};

static void InitDefaultsVoteInfo_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_VoteInfo_default_instance_;
    new (ptr) ::vega::VoteInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::VoteInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VoteInfo_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVoteInfo_proto_2ftm_2freplay_2eproto}, {
      &scc_info_Validator_proto_2ftm_2freplay_2eproto.base,}};

static void InitDefaultsEvidenceParams_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_EvidenceParams_default_instance_;
    new (ptr) ::vega::EvidenceParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::EvidenceParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EvidenceParams_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEvidenceParams_proto_2ftm_2freplay_2eproto}, {}};

static void InitDefaultsValidatorParams_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_ValidatorParams_default_instance_;
    new (ptr) ::vega::ValidatorParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::ValidatorParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ValidatorParams_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValidatorParams_proto_2ftm_2freplay_2eproto}, {}};

static void InitDefaultsVersionParams_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_VersionParams_default_instance_;
    new (ptr) ::vega::VersionParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::VersionParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VersionParams_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersionParams_proto_2ftm_2freplay_2eproto}, {}};

static void InitDefaultsHeader_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_Header_default_instance_;
    new (ptr) ::vega::Header();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::Header::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Header_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeader_proto_2ftm_2freplay_2eproto}, {}};

static void InitDefaultsPublicKey_proto_2ftm_2freplay_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vega::_PublicKey_default_instance_;
    new (ptr) ::vega::PublicKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vega::PublicKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PublicKey_proto_2ftm_2freplay_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPublicKey_proto_2ftm_2freplay_2eproto}, {}};

void InitDefaults_proto_2ftm_2freplay_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_TmEvent_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestInitChain_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestBeginBlock_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestDeliverTx_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseInitChain_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseBeginBlock_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseDeliverTx_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Event_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventAttribute_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidatorUpdate_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConsensusParams_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlockParams_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Evidence_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Validator_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LastCommitInfo_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VoteInfo_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EvidenceParams_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidatorParams_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VersionParams_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Header_proto_2ftm_2freplay_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PublicKey_proto_2ftm_2freplay_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_proto_2ftm_2freplay_2eproto[21];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_proto_2ftm_2freplay_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_proto_2ftm_2freplay_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_proto_2ftm_2freplay_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::TmEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::vega::TmEvent, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::vega::TmEventDefaultTypeInternal, reqinitchain_),
  offsetof(::vega::TmEventDefaultTypeInternal, resinitchain_),
  offsetof(::vega::TmEventDefaultTypeInternal, reqdelivertx_),
  offsetof(::vega::TmEventDefaultTypeInternal, resdelivertx_),
  offsetof(::vega::TmEventDefaultTypeInternal, reqbeginblock_),
  offsetof(::vega::TmEventDefaultTypeInternal, resbeginblock_),
  PROTOBUF_FIELD_OFFSET(::vega::TmEvent, Action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::RequestInitChain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::RequestInitChain, time_),
  PROTOBUF_FIELD_OFFSET(::vega::RequestInitChain, chainid_),
  PROTOBUF_FIELD_OFFSET(::vega::RequestInitChain, consensusparams_),
  PROTOBUF_FIELD_OFFSET(::vega::RequestInitChain, validators_),
  PROTOBUF_FIELD_OFFSET(::vega::RequestInitChain, appstatebytes_),
  PROTOBUF_FIELD_OFFSET(::vega::RequestInitChain, initialheight_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::RequestBeginBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::RequestBeginBlock, hash_),
  PROTOBUF_FIELD_OFFSET(::vega::RequestBeginBlock, header_),
  PROTOBUF_FIELD_OFFSET(::vega::RequestBeginBlock, lastcommitinfo_),
  PROTOBUF_FIELD_OFFSET(::vega::RequestBeginBlock, byzantinevalidators_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::RequestDeliverTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::RequestDeliverTx, tx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::ResponseInitChain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::ResponseInitChain, consensusparams_),
  PROTOBUF_FIELD_OFFSET(::vega::ResponseInitChain, validators_),
  PROTOBUF_FIELD_OFFSET(::vega::ResponseInitChain, apphash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::ResponseBeginBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::ResponseBeginBlock, events_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::ResponseDeliverTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::ResponseDeliverTx, code_),
  PROTOBUF_FIELD_OFFSET(::vega::ResponseDeliverTx, data_),
  PROTOBUF_FIELD_OFFSET(::vega::ResponseDeliverTx, log_),
  PROTOBUF_FIELD_OFFSET(::vega::ResponseDeliverTx, info_),
  PROTOBUF_FIELD_OFFSET(::vega::ResponseDeliverTx, gaswanted_),
  PROTOBUF_FIELD_OFFSET(::vega::ResponseDeliverTx, gasused_),
  PROTOBUF_FIELD_OFFSET(::vega::ResponseDeliverTx, events_),
  PROTOBUF_FIELD_OFFSET(::vega::ResponseDeliverTx, codespace_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::Event, type_),
  PROTOBUF_FIELD_OFFSET(::vega::Event, attributes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::EventAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::EventAttribute, key_),
  PROTOBUF_FIELD_OFFSET(::vega::EventAttribute, value_),
  PROTOBUF_FIELD_OFFSET(::vega::EventAttribute, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::ValidatorUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::ValidatorUpdate, pub_key_),
  PROTOBUF_FIELD_OFFSET(::vega::ValidatorUpdate, power_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::ConsensusParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::ConsensusParams, block_),
  PROTOBUF_FIELD_OFFSET(::vega::ConsensusParams, evidence_),
  PROTOBUF_FIELD_OFFSET(::vega::ConsensusParams, validator_),
  PROTOBUF_FIELD_OFFSET(::vega::ConsensusParams, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::BlockParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::BlockParams, maxbytes_),
  PROTOBUF_FIELD_OFFSET(::vega::BlockParams, maxgas_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::Evidence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::Evidence, type_),
  PROTOBUF_FIELD_OFFSET(::vega::Evidence, validator_),
  PROTOBUF_FIELD_OFFSET(::vega::Evidence, height_),
  PROTOBUF_FIELD_OFFSET(::vega::Evidence, time_),
  PROTOBUF_FIELD_OFFSET(::vega::Evidence, totalvotingpower_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::Validator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::Validator, address_),
  PROTOBUF_FIELD_OFFSET(::vega::Validator, power_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::LastCommitInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::LastCommitInfo, round_),
  PROTOBUF_FIELD_OFFSET(::vega::LastCommitInfo, votes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::VoteInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::VoteInfo, validator_),
  PROTOBUF_FIELD_OFFSET(::vega::VoteInfo, signedlastblock_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::EvidenceParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::EvidenceParams, maxagenumblocks_),
  PROTOBUF_FIELD_OFFSET(::vega::EvidenceParams, maxageduration_),
  PROTOBUF_FIELD_OFFSET(::vega::EvidenceParams, max_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::ValidatorParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::ValidatorParams, pubkeytypes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::VersionParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::VersionParams, appversion_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::vega::Header, chainid_),
  PROTOBUF_FIELD_OFFSET(::vega::Header, height_),
  PROTOBUF_FIELD_OFFSET(::vega::Header, time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vega::PublicKey, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::vega::PublicKey, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::vega::PublicKeyDefaultTypeInternal, ed25519_),
  PROTOBUF_FIELD_OFFSET(::vega::PublicKey, sum_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::vega::TmEvent)},
  { 12, -1, sizeof(::vega::RequestInitChain)},
  { 23, -1, sizeof(::vega::RequestBeginBlock)},
  { 32, -1, sizeof(::vega::RequestDeliverTx)},
  { 38, -1, sizeof(::vega::ResponseInitChain)},
  { 46, -1, sizeof(::vega::ResponseBeginBlock)},
  { 52, -1, sizeof(::vega::ResponseDeliverTx)},
  { 65, -1, sizeof(::vega::Event)},
  { 72, -1, sizeof(::vega::EventAttribute)},
  { 80, -1, sizeof(::vega::ValidatorUpdate)},
  { 87, -1, sizeof(::vega::ConsensusParams)},
  { 96, -1, sizeof(::vega::BlockParams)},
  { 103, -1, sizeof(::vega::Evidence)},
  { 113, -1, sizeof(::vega::Validator)},
  { 120, -1, sizeof(::vega::LastCommitInfo)},
  { 127, -1, sizeof(::vega::VoteInfo)},
  { 134, -1, sizeof(::vega::EvidenceParams)},
  { 142, -1, sizeof(::vega::ValidatorParams)},
  { 148, -1, sizeof(::vega::VersionParams)},
  { 154, -1, sizeof(::vega::Header)},
  { 162, -1, sizeof(::vega::PublicKey)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_TmEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_RequestInitChain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_RequestBeginBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_RequestDeliverTx_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_ResponseInitChain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_ResponseBeginBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_ResponseDeliverTx_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_EventAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_ValidatorUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_ConsensusParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_BlockParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_Evidence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_Validator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_LastCommitInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_VoteInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_EvidenceParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_ValidatorParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_VersionParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_Header_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vega::_PublicKey_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_proto_2ftm_2freplay_2eproto = {
  {}, AddDescriptors_proto_2ftm_2freplay_2eproto, "proto/tm/replay.proto", schemas,
  file_default_instances, TableStruct_proto_2ftm_2freplay_2eproto::offsets,
  file_level_metadata_proto_2ftm_2freplay_2eproto, 21, file_level_enum_descriptors_proto_2ftm_2freplay_2eproto, file_level_service_descriptors_proto_2ftm_2freplay_2eproto,
};

const char descriptor_table_protodef_proto_2ftm_2freplay_2eproto[] =
  "\n\025proto/tm/replay.proto\022\004vega\"\272\002\n\007TmEven"
  "t\022.\n\014reqInitChain\030\001 \001(\0132\026.vega.RequestIn"
  "itChainH\000\022/\n\014resInitChain\030\002 \001(\0132\027.vega.R"
  "esponseInitChainH\000\022.\n\014reqDeliverTx\030\003 \001(\013"
  "2\026.vega.RequestDeliverTxH\000\022/\n\014resDeliver"
  "Tx\030\004 \001(\0132\027.vega.ResponseDeliverTxH\000\0220\n\rr"
  "eqBeginBlock\030\005 \001(\0132\027.vega.RequestBeginBl"
  "ockH\000\0221\n\rresBeginBlock\030\006 \001(\0132\030.vega.Resp"
  "onseBeginBlockH\000B\010\n\006Action\"\272\001\n\020RequestIn"
  "itChain\022\014\n\004time\030\001 \001(\003\022\017\n\007chainID\030\002 \001(\t\022."
  "\n\017consensusParams\030\003 \001(\0132\025.vega.Consensus"
  "Params\022)\n\nvalidators\030\004 \003(\0132\025.vega.Valida"
  "torUpdate\022\025\n\rappStateBytes\030\005 \001(\014\022\025\n\rinit"
  "ialHeight\030\006 \001(\003\"\232\001\n\021RequestBeginBlock\022\014\n"
  "\004hash\030\001 \001(\014\022\034\n\006header\030\002 \001(\0132\014.vega.Heade"
  "r\022,\n\016lastCommitInfo\030\003 \001(\0132\024.vega.LastCom"
  "mitInfo\022+\n\023byzantineValidators\030\004 \003(\0132\016.v"
  "ega.Evidence\"\036\n\020RequestDeliverTx\022\n\n\002tx\030\001"
  " \001(\014\"\177\n\021ResponseInitChain\022.\n\017consensusPa"
  "rams\030\001 \001(\0132\025.vega.ConsensusParams\022)\n\nval"
  "idators\030\002 \003(\0132\025.vega.ValidatorUpdate\022\017\n\007"
  "appHash\030\003 \001(\014\"1\n\022ResponseBeginBlock\022\033\n\006e"
  "vents\030\001 \003(\0132\013.vega.Event\"\236\001\n\021ResponseDel"
  "iverTx\022\014\n\004code\030\001 \001(\r\022\014\n\004data\030\002 \001(\014\022\013\n\003lo"
  "g\030\003 \001(\t\022\014\n\004info\030\004 \001(\t\022\021\n\tgasWanted\030\005 \001(\003"
  "\022\017\n\007gasUsed\030\006 \001(\003\022\033\n\006events\030\007 \003(\0132\013.vega"
  ".Event\022\021\n\tcodespace\030\010 \001(\t\"\?\n\005Event\022\014\n\004ty"
  "pe\030\001 \001(\t\022(\n\nattributes\030\002 \003(\0132\024.vega.Even"
  "tAttribute\";\n\016EventAttribute\022\013\n\003key\030\001 \001("
  "\014\022\r\n\005value\030\002 \001(\014\022\r\n\005index\030\003 \001(\010\"B\n\017Valid"
  "atorUpdate\022 \n\007pub_key\030\001 \001(\0132\017.vega.Publi"
  "cKey\022\r\n\005power\030\002 \001(\003\"\253\001\n\017ConsensusParams\022"
  " \n\005block\030\001 \001(\0132\021.vega.BlockParams\022&\n\010evi"
  "dence\030\002 \001(\0132\024.vega.EvidenceParams\022(\n\tval"
  "idator\030\003 \001(\0132\025.vega.ValidatorParams\022$\n\007v"
  "ersion\030\004 \001(\0132\023.vega.VersionParams\"/\n\013Blo"
  "ckParams\022\020\n\010maxBytes\030\001 \001(\003\022\016\n\006maxGas\030\002 \001"
  "(\003\"\210\001\n\010Evidence\022 \n\004type\030\001 \001(\0162\022.vega.Evi"
  "denceType\022\"\n\tvalidator\030\002 \001(\0132\017.vega.Vali"
  "dator\022\016\n\006height\030\003 \001(\003\022\014\n\004time\030\004 \001(\003\022\030\n\020t"
  "otalVotingPower\030\005 \001(\003\"+\n\tValidator\022\017\n\007ad"
  "dress\030\001 \001(\014\022\r\n\005power\030\003 \001(\003\">\n\016LastCommit"
  "Info\022\r\n\005round\030\001 \001(\005\022\035\n\005votes\030\002 \003(\0132\016.veg"
  "a.VoteInfo\"G\n\010VoteInfo\022\"\n\tvalidator\030\001 \001("
  "\0132\017.vega.Validator\022\027\n\017signedLastBlock\030\002 "
  "\001(\010\"R\n\016EvidenceParams\022\027\n\017maxAgeNumBlocks"
  "\030\001 \001(\003\022\026\n\016maxAgeDuration\030\002 \001(\003\022\017\n\007max_nu"
  "m\030\003 \001(\r\"&\n\017ValidatorParams\022\023\n\013pubKeyType"
  "s\030\001 \003(\t\"#\n\rVersionParams\022\022\n\nappVersion\030\001"
  " \001(\004\"7\n\006Header\022\017\n\007chainId\030\001 \001(\t\022\016\n\006heigh"
  "t\030\002 \001(\003\022\014\n\004time\030\003 \001(\003\"%\n\tPublicKey\022\021\n\007ed"
  "25519\030\001 \001(\014H\000B\005\n\003sum*H\n\014EvidenceType\022\013\n\007"
  "UNKNOWN\020\000\022\022\n\016DUPLICATE_VOTE\020\001\022\027\n\023LIGHT_C"
  "LIENT_ATTACK\020\002B7\n\027io.vegaprotocol.vega.t"
  "mZ\034code.vegaprotocol.io/vega/tmb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_proto_2ftm_2freplay_2eproto = {
  false, InitDefaults_proto_2ftm_2freplay_2eproto, 
  descriptor_table_protodef_proto_2ftm_2freplay_2eproto,
  "proto/tm/replay.proto", &assign_descriptors_table_proto_2ftm_2freplay_2eproto, 2199,
};

void AddDescriptors_proto_2ftm_2freplay_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_proto_2ftm_2freplay_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2ftm_2freplay_2eproto = []() { AddDescriptors_proto_2ftm_2freplay_2eproto(); return true; }();
namespace vega {
const ::google::protobuf::EnumDescriptor* EvidenceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return file_level_enum_descriptors_proto_2ftm_2freplay_2eproto[0];
}
bool EvidenceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TmEvent::InitAsDefaultInstance() {
  ::vega::_TmEvent_default_instance_.reqinitchain_ = const_cast< ::vega::RequestInitChain*>(
      ::vega::RequestInitChain::internal_default_instance());
  ::vega::_TmEvent_default_instance_.resinitchain_ = const_cast< ::vega::ResponseInitChain*>(
      ::vega::ResponseInitChain::internal_default_instance());
  ::vega::_TmEvent_default_instance_.reqdelivertx_ = const_cast< ::vega::RequestDeliverTx*>(
      ::vega::RequestDeliverTx::internal_default_instance());
  ::vega::_TmEvent_default_instance_.resdelivertx_ = const_cast< ::vega::ResponseDeliverTx*>(
      ::vega::ResponseDeliverTx::internal_default_instance());
  ::vega::_TmEvent_default_instance_.reqbeginblock_ = const_cast< ::vega::RequestBeginBlock*>(
      ::vega::RequestBeginBlock::internal_default_instance());
  ::vega::_TmEvent_default_instance_.resbeginblock_ = const_cast< ::vega::ResponseBeginBlock*>(
      ::vega::ResponseBeginBlock::internal_default_instance());
}
class TmEvent::HasBitSetters {
 public:
  static const ::vega::RequestInitChain& reqinitchain(const TmEvent* msg);
  static const ::vega::ResponseInitChain& resinitchain(const TmEvent* msg);
  static const ::vega::RequestDeliverTx& reqdelivertx(const TmEvent* msg);
  static const ::vega::ResponseDeliverTx& resdelivertx(const TmEvent* msg);
  static const ::vega::RequestBeginBlock& reqbeginblock(const TmEvent* msg);
  static const ::vega::ResponseBeginBlock& resbeginblock(const TmEvent* msg);
};

const ::vega::RequestInitChain&
TmEvent::HasBitSetters::reqinitchain(const TmEvent* msg) {
  return *msg->Action_.reqinitchain_;
}
const ::vega::ResponseInitChain&
TmEvent::HasBitSetters::resinitchain(const TmEvent* msg) {
  return *msg->Action_.resinitchain_;
}
const ::vega::RequestDeliverTx&
TmEvent::HasBitSetters::reqdelivertx(const TmEvent* msg) {
  return *msg->Action_.reqdelivertx_;
}
const ::vega::ResponseDeliverTx&
TmEvent::HasBitSetters::resdelivertx(const TmEvent* msg) {
  return *msg->Action_.resdelivertx_;
}
const ::vega::RequestBeginBlock&
TmEvent::HasBitSetters::reqbeginblock(const TmEvent* msg) {
  return *msg->Action_.reqbeginblock_;
}
const ::vega::ResponseBeginBlock&
TmEvent::HasBitSetters::resbeginblock(const TmEvent* msg) {
  return *msg->Action_.resbeginblock_;
}
void TmEvent::set_allocated_reqinitchain(::vega::RequestInitChain* reqinitchain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Action();
  if (reqinitchain) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      reqinitchain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reqinitchain, submessage_arena);
    }
    set_has_reqinitchain();
    Action_.reqinitchain_ = reqinitchain;
  }
  // @@protoc_insertion_point(field_set_allocated:vega.TmEvent.reqInitChain)
}
void TmEvent::set_allocated_resinitchain(::vega::ResponseInitChain* resinitchain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Action();
  if (resinitchain) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      resinitchain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resinitchain, submessage_arena);
    }
    set_has_resinitchain();
    Action_.resinitchain_ = resinitchain;
  }
  // @@protoc_insertion_point(field_set_allocated:vega.TmEvent.resInitChain)
}
void TmEvent::set_allocated_reqdelivertx(::vega::RequestDeliverTx* reqdelivertx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Action();
  if (reqdelivertx) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      reqdelivertx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reqdelivertx, submessage_arena);
    }
    set_has_reqdelivertx();
    Action_.reqdelivertx_ = reqdelivertx;
  }
  // @@protoc_insertion_point(field_set_allocated:vega.TmEvent.reqDeliverTx)
}
void TmEvent::set_allocated_resdelivertx(::vega::ResponseDeliverTx* resdelivertx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Action();
  if (resdelivertx) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      resdelivertx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resdelivertx, submessage_arena);
    }
    set_has_resdelivertx();
    Action_.resdelivertx_ = resdelivertx;
  }
  // @@protoc_insertion_point(field_set_allocated:vega.TmEvent.resDeliverTx)
}
void TmEvent::set_allocated_reqbeginblock(::vega::RequestBeginBlock* reqbeginblock) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Action();
  if (reqbeginblock) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      reqbeginblock = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reqbeginblock, submessage_arena);
    }
    set_has_reqbeginblock();
    Action_.reqbeginblock_ = reqbeginblock;
  }
  // @@protoc_insertion_point(field_set_allocated:vega.TmEvent.reqBeginBlock)
}
void TmEvent::set_allocated_resbeginblock(::vega::ResponseBeginBlock* resbeginblock) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Action();
  if (resbeginblock) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      resbeginblock = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resbeginblock, submessage_arena);
    }
    set_has_resbeginblock();
    Action_.resbeginblock_ = resbeginblock;
  }
  // @@protoc_insertion_point(field_set_allocated:vega.TmEvent.resBeginBlock)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TmEvent::kReqInitChainFieldNumber;
const int TmEvent::kResInitChainFieldNumber;
const int TmEvent::kReqDeliverTxFieldNumber;
const int TmEvent::kResDeliverTxFieldNumber;
const int TmEvent::kReqBeginBlockFieldNumber;
const int TmEvent::kResBeginBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TmEvent::TmEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.TmEvent)
}
TmEvent::TmEvent(const TmEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_Action();
  switch (from.Action_case()) {
    case kReqInitChain: {
      mutable_reqinitchain()->::vega::RequestInitChain::MergeFrom(from.reqinitchain());
      break;
    }
    case kResInitChain: {
      mutable_resinitchain()->::vega::ResponseInitChain::MergeFrom(from.resinitchain());
      break;
    }
    case kReqDeliverTx: {
      mutable_reqdelivertx()->::vega::RequestDeliverTx::MergeFrom(from.reqdelivertx());
      break;
    }
    case kResDeliverTx: {
      mutable_resdelivertx()->::vega::ResponseDeliverTx::MergeFrom(from.resdelivertx());
      break;
    }
    case kReqBeginBlock: {
      mutable_reqbeginblock()->::vega::RequestBeginBlock::MergeFrom(from.reqbeginblock());
      break;
    }
    case kResBeginBlock: {
      mutable_resbeginblock()->::vega::ResponseBeginBlock::MergeFrom(from.resbeginblock());
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:vega.TmEvent)
}

void TmEvent::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TmEvent_proto_2ftm_2freplay_2eproto.base);
  clear_has_Action();
}

TmEvent::~TmEvent() {
  // @@protoc_insertion_point(destructor:vega.TmEvent)
  SharedDtor();
}

void TmEvent::SharedDtor() {
  if (has_Action()) {
    clear_Action();
  }
}

void TmEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TmEvent& TmEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TmEvent_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void TmEvent::clear_Action() {
// @@protoc_insertion_point(one_of_clear_start:vega.TmEvent)
  switch (Action_case()) {
    case kReqInitChain: {
      delete Action_.reqinitchain_;
      break;
    }
    case kResInitChain: {
      delete Action_.resinitchain_;
      break;
    }
    case kReqDeliverTx: {
      delete Action_.reqdelivertx_;
      break;
    }
    case kResDeliverTx: {
      delete Action_.resdelivertx_;
      break;
    }
    case kReqBeginBlock: {
      delete Action_.reqbeginblock_;
      break;
    }
    case kResBeginBlock: {
      delete Action_.resbeginblock_;
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ACTION_NOT_SET;
}


void TmEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.TmEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Action();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TmEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TmEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .vega.RequestInitChain reqInitChain = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::RequestInitChain::_InternalParse;
        object = msg->mutable_reqinitchain();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .vega.ResponseInitChain resInitChain = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::ResponseInitChain::_InternalParse;
        object = msg->mutable_resinitchain();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .vega.RequestDeliverTx reqDeliverTx = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::RequestDeliverTx::_InternalParse;
        object = msg->mutable_reqdelivertx();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .vega.ResponseDeliverTx resDeliverTx = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::ResponseDeliverTx::_InternalParse;
        object = msg->mutable_resdelivertx();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .vega.RequestBeginBlock reqBeginBlock = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::RequestBeginBlock::_InternalParse;
        object = msg->mutable_reqbeginblock();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .vega.ResponseBeginBlock resBeginBlock = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::ResponseBeginBlock::_InternalParse;
        object = msg->mutable_resbeginblock();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TmEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.TmEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .vega.RequestInitChain reqInitChain = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reqinitchain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.ResponseInitChain resInitChain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resinitchain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.RequestDeliverTx reqDeliverTx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reqdelivertx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.ResponseDeliverTx resDeliverTx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resdelivertx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.RequestBeginBlock reqBeginBlock = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reqbeginblock()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.ResponseBeginBlock resBeginBlock = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resbeginblock()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.TmEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.TmEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TmEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.TmEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.RequestInitChain reqInitChain = 1;
  if (has_reqinitchain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::reqinitchain(this), output);
  }

  // .vega.ResponseInitChain resInitChain = 2;
  if (has_resinitchain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::resinitchain(this), output);
  }

  // .vega.RequestDeliverTx reqDeliverTx = 3;
  if (has_reqdelivertx()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::reqdelivertx(this), output);
  }

  // .vega.ResponseDeliverTx resDeliverTx = 4;
  if (has_resdelivertx()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::resdelivertx(this), output);
  }

  // .vega.RequestBeginBlock reqBeginBlock = 5;
  if (has_reqbeginblock()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::reqbeginblock(this), output);
  }

  // .vega.ResponseBeginBlock resBeginBlock = 6;
  if (has_resbeginblock()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::resbeginblock(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.TmEvent)
}

::google::protobuf::uint8* TmEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.TmEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.RequestInitChain reqInitChain = 1;
  if (has_reqinitchain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::reqinitchain(this), target);
  }

  // .vega.ResponseInitChain resInitChain = 2;
  if (has_resinitchain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::resinitchain(this), target);
  }

  // .vega.RequestDeliverTx reqDeliverTx = 3;
  if (has_reqdelivertx()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::reqdelivertx(this), target);
  }

  // .vega.ResponseDeliverTx resDeliverTx = 4;
  if (has_resdelivertx()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::resdelivertx(this), target);
  }

  // .vega.RequestBeginBlock reqBeginBlock = 5;
  if (has_reqbeginblock()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::reqbeginblock(this), target);
  }

  // .vega.ResponseBeginBlock resBeginBlock = 6;
  if (has_resbeginblock()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::resbeginblock(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.TmEvent)
  return target;
}

size_t TmEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.TmEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Action_case()) {
    // .vega.RequestInitChain reqInitChain = 1;
    case kReqInitChain: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Action_.reqinitchain_);
      break;
    }
    // .vega.ResponseInitChain resInitChain = 2;
    case kResInitChain: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Action_.resinitchain_);
      break;
    }
    // .vega.RequestDeliverTx reqDeliverTx = 3;
    case kReqDeliverTx: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Action_.reqdelivertx_);
      break;
    }
    // .vega.ResponseDeliverTx resDeliverTx = 4;
    case kResDeliverTx: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Action_.resdelivertx_);
      break;
    }
    // .vega.RequestBeginBlock reqBeginBlock = 5;
    case kReqBeginBlock: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Action_.reqbeginblock_);
      break;
    }
    // .vega.ResponseBeginBlock resBeginBlock = 6;
    case kResBeginBlock: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Action_.resbeginblock_);
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TmEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.TmEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const TmEvent* source =
      ::google::protobuf::DynamicCastToGenerated<TmEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.TmEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.TmEvent)
    MergeFrom(*source);
  }
}

void TmEvent::MergeFrom(const TmEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.TmEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Action_case()) {
    case kReqInitChain: {
      mutable_reqinitchain()->::vega::RequestInitChain::MergeFrom(from.reqinitchain());
      break;
    }
    case kResInitChain: {
      mutable_resinitchain()->::vega::ResponseInitChain::MergeFrom(from.resinitchain());
      break;
    }
    case kReqDeliverTx: {
      mutable_reqdelivertx()->::vega::RequestDeliverTx::MergeFrom(from.reqdelivertx());
      break;
    }
    case kResDeliverTx: {
      mutable_resdelivertx()->::vega::ResponseDeliverTx::MergeFrom(from.resdelivertx());
      break;
    }
    case kReqBeginBlock: {
      mutable_reqbeginblock()->::vega::RequestBeginBlock::MergeFrom(from.reqbeginblock());
      break;
    }
    case kResBeginBlock: {
      mutable_resbeginblock()->::vega::ResponseBeginBlock::MergeFrom(from.resbeginblock());
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
}

void TmEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.TmEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TmEvent::CopyFrom(const TmEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.TmEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TmEvent::IsInitialized() const {
  return true;
}

void TmEvent::Swap(TmEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TmEvent::InternalSwap(TmEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(Action_, other->Action_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata TmEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RequestInitChain::InitAsDefaultInstance() {
  ::vega::_RequestInitChain_default_instance_._instance.get_mutable()->consensusparams_ = const_cast< ::vega::ConsensusParams*>(
      ::vega::ConsensusParams::internal_default_instance());
}
class RequestInitChain::HasBitSetters {
 public:
  static const ::vega::ConsensusParams& consensusparams(const RequestInitChain* msg);
};

const ::vega::ConsensusParams&
RequestInitChain::HasBitSetters::consensusparams(const RequestInitChain* msg) {
  return *msg->consensusparams_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestInitChain::kTimeFieldNumber;
const int RequestInitChain::kChainIDFieldNumber;
const int RequestInitChain::kConsensusParamsFieldNumber;
const int RequestInitChain::kValidatorsFieldNumber;
const int RequestInitChain::kAppStateBytesFieldNumber;
const int RequestInitChain::kInitialHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestInitChain::RequestInitChain()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.RequestInitChain)
}
RequestInitChain::RequestInitChain(const RequestInitChain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      validators_(from.validators_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chainid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chainid().size() > 0) {
    chainid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chainid_);
  }
  appstatebytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appstatebytes().size() > 0) {
    appstatebytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appstatebytes_);
  }
  if (from.has_consensusparams()) {
    consensusparams_ = new ::vega::ConsensusParams(*from.consensusparams_);
  } else {
    consensusparams_ = nullptr;
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&initialheight_) -
    reinterpret_cast<char*>(&time_)) + sizeof(initialheight_));
  // @@protoc_insertion_point(copy_constructor:vega.RequestInitChain)
}

void RequestInitChain::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RequestInitChain_proto_2ftm_2freplay_2eproto.base);
  chainid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appstatebytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&consensusparams_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&initialheight_) -
      reinterpret_cast<char*>(&consensusparams_)) + sizeof(initialheight_));
}

RequestInitChain::~RequestInitChain() {
  // @@protoc_insertion_point(destructor:vega.RequestInitChain)
  SharedDtor();
}

void RequestInitChain::SharedDtor() {
  chainid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appstatebytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete consensusparams_;
}

void RequestInitChain::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestInitChain& RequestInitChain::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RequestInitChain_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void RequestInitChain::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.RequestInitChain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  validators_.Clear();
  chainid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appstatebytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && consensusparams_ != nullptr) {
    delete consensusparams_;
  }
  consensusparams_ = nullptr;
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&initialheight_) -
      reinterpret_cast<char*>(&time_)) + sizeof(initialheight_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RequestInitChain::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RequestInitChain*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 time = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string chainID = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.RequestInitChain.chainID");
        object = msg->mutable_chainid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .vega.ConsensusParams consensusParams = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::ConsensusParams::_InternalParse;
        object = msg->mutable_consensusparams();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .vega.ValidatorUpdate validators = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::vega::ValidatorUpdate::_InternalParse;
          object = msg->add_validators();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // bytes appStateBytes = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_appstatebytes();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 initialHeight = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_initialheight(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RequestInitChain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.RequestInitChain)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string chainID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chainid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chainid().data(), static_cast<int>(this->chainid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.RequestInitChain.chainID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.ConsensusParams consensusParams = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_consensusparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vega.ValidatorUpdate validators = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_validators()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes appStateBytes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_appstatebytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 initialHeight = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &initialheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.RequestInitChain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.RequestInitChain)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RequestInitChain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.RequestInitChain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // string chainID = 2;
  if (this->chainid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chainid().data(), static_cast<int>(this->chainid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.RequestInitChain.chainID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chainid(), output);
  }

  // .vega.ConsensusParams consensusParams = 3;
  if (this->has_consensusparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::consensusparams(this), output);
  }

  // repeated .vega.ValidatorUpdate validators = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validators_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->validators(static_cast<int>(i)),
      output);
  }

  // bytes appStateBytes = 5;
  if (this->appstatebytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->appstatebytes(), output);
  }

  // int64 initialHeight = 6;
  if (this->initialheight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->initialheight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.RequestInitChain)
}

::google::protobuf::uint8* RequestInitChain::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.RequestInitChain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // string chainID = 2;
  if (this->chainid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chainid().data(), static_cast<int>(this->chainid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.RequestInitChain.chainID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chainid(), target);
  }

  // .vega.ConsensusParams consensusParams = 3;
  if (this->has_consensusparams()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::consensusparams(this), target);
  }

  // repeated .vega.ValidatorUpdate validators = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validators_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->validators(static_cast<int>(i)), target);
  }

  // bytes appStateBytes = 5;
  if (this->appstatebytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->appstatebytes(), target);
  }

  // int64 initialHeight = 6;
  if (this->initialheight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->initialheight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.RequestInitChain)
  return target;
}

size_t RequestInitChain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.RequestInitChain)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vega.ValidatorUpdate validators = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->validators_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->validators(static_cast<int>(i)));
    }
  }

  // string chainID = 2;
  if (this->chainid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chainid());
  }

  // bytes appStateBytes = 5;
  if (this->appstatebytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->appstatebytes());
  }

  // .vega.ConsensusParams consensusParams = 3;
  if (this->has_consensusparams()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *consensusparams_);
  }

  // int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // int64 initialHeight = 6;
  if (this->initialheight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->initialheight());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestInitChain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.RequestInitChain)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestInitChain* source =
      ::google::protobuf::DynamicCastToGenerated<RequestInitChain>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.RequestInitChain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.RequestInitChain)
    MergeFrom(*source);
  }
}

void RequestInitChain::MergeFrom(const RequestInitChain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.RequestInitChain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  validators_.MergeFrom(from.validators_);
  if (from.chainid().size() > 0) {

    chainid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chainid_);
  }
  if (from.appstatebytes().size() > 0) {

    appstatebytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appstatebytes_);
  }
  if (from.has_consensusparams()) {
    mutable_consensusparams()->::vega::ConsensusParams::MergeFrom(from.consensusparams());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.initialheight() != 0) {
    set_initialheight(from.initialheight());
  }
}

void RequestInitChain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.RequestInitChain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestInitChain::CopyFrom(const RequestInitChain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.RequestInitChain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestInitChain::IsInitialized() const {
  return true;
}

void RequestInitChain::Swap(RequestInitChain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestInitChain::InternalSwap(RequestInitChain* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&validators_)->InternalSwap(CastToBase(&other->validators_));
  chainid_.Swap(&other->chainid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  appstatebytes_.Swap(&other->appstatebytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(consensusparams_, other->consensusparams_);
  swap(time_, other->time_);
  swap(initialheight_, other->initialheight_);
}

::google::protobuf::Metadata RequestInitChain::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RequestBeginBlock::InitAsDefaultInstance() {
  ::vega::_RequestBeginBlock_default_instance_._instance.get_mutable()->header_ = const_cast< ::vega::Header*>(
      ::vega::Header::internal_default_instance());
  ::vega::_RequestBeginBlock_default_instance_._instance.get_mutable()->lastcommitinfo_ = const_cast< ::vega::LastCommitInfo*>(
      ::vega::LastCommitInfo::internal_default_instance());
}
class RequestBeginBlock::HasBitSetters {
 public:
  static const ::vega::Header& header(const RequestBeginBlock* msg);
  static const ::vega::LastCommitInfo& lastcommitinfo(const RequestBeginBlock* msg);
};

const ::vega::Header&
RequestBeginBlock::HasBitSetters::header(const RequestBeginBlock* msg) {
  return *msg->header_;
}
const ::vega::LastCommitInfo&
RequestBeginBlock::HasBitSetters::lastcommitinfo(const RequestBeginBlock* msg) {
  return *msg->lastcommitinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestBeginBlock::kHashFieldNumber;
const int RequestBeginBlock::kHeaderFieldNumber;
const int RequestBeginBlock::kLastCommitInfoFieldNumber;
const int RequestBeginBlock::kByzantineValidatorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestBeginBlock::RequestBeginBlock()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.RequestBeginBlock)
}
RequestBeginBlock::RequestBeginBlock(const RequestBeginBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      byzantinevalidators_(from.byzantinevalidators_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.has_header()) {
    header_ = new ::vega::Header(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from.has_lastcommitinfo()) {
    lastcommitinfo_ = new ::vega::LastCommitInfo(*from.lastcommitinfo_);
  } else {
    lastcommitinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:vega.RequestBeginBlock)
}

void RequestBeginBlock::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RequestBeginBlock_proto_2ftm_2freplay_2eproto.base);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lastcommitinfo_) -
      reinterpret_cast<char*>(&header_)) + sizeof(lastcommitinfo_));
}

RequestBeginBlock::~RequestBeginBlock() {
  // @@protoc_insertion_point(destructor:vega.RequestBeginBlock)
  SharedDtor();
}

void RequestBeginBlock::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete lastcommitinfo_;
}

void RequestBeginBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestBeginBlock& RequestBeginBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RequestBeginBlock_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void RequestBeginBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.RequestBeginBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  byzantinevalidators_.Clear();
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && lastcommitinfo_ != nullptr) {
    delete lastcommitinfo_;
  }
  lastcommitinfo_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RequestBeginBlock::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RequestBeginBlock*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes hash = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_hash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .vega.Header header = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::Header::_InternalParse;
        object = msg->mutable_header();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .vega.LastCommitInfo lastCommitInfo = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::LastCommitInfo::_InternalParse;
        object = msg->mutable_lastcommitinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .vega.Evidence byzantineValidators = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::vega::Evidence::_InternalParse;
          object = msg->add_byzantinevalidators();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RequestBeginBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.RequestBeginBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.Header header = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.LastCommitInfo lastCommitInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lastcommitinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vega.Evidence byzantineValidators = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_byzantinevalidators()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.RequestBeginBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.RequestBeginBlock)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RequestBeginBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.RequestBeginBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->hash(), output);
  }

  // .vega.Header header = 2;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::header(this), output);
  }

  // .vega.LastCommitInfo lastCommitInfo = 3;
  if (this->has_lastcommitinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::lastcommitinfo(this), output);
  }

  // repeated .vega.Evidence byzantineValidators = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->byzantinevalidators_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->byzantinevalidators(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.RequestBeginBlock)
}

::google::protobuf::uint8* RequestBeginBlock::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.RequestBeginBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->hash(), target);
  }

  // .vega.Header header = 2;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::header(this), target);
  }

  // .vega.LastCommitInfo lastCommitInfo = 3;
  if (this->has_lastcommitinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::lastcommitinfo(this), target);
  }

  // repeated .vega.Evidence byzantineValidators = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->byzantinevalidators_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->byzantinevalidators(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.RequestBeginBlock)
  return target;
}

size_t RequestBeginBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.RequestBeginBlock)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vega.Evidence byzantineValidators = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->byzantinevalidators_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->byzantinevalidators(static_cast<int>(i)));
    }
  }

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // .vega.Header header = 2;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .vega.LastCommitInfo lastCommitInfo = 3;
  if (this->has_lastcommitinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lastcommitinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestBeginBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.RequestBeginBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestBeginBlock* source =
      ::google::protobuf::DynamicCastToGenerated<RequestBeginBlock>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.RequestBeginBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.RequestBeginBlock)
    MergeFrom(*source);
  }
}

void RequestBeginBlock::MergeFrom(const RequestBeginBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.RequestBeginBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  byzantinevalidators_.MergeFrom(from.byzantinevalidators_);
  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.has_header()) {
    mutable_header()->::vega::Header::MergeFrom(from.header());
  }
  if (from.has_lastcommitinfo()) {
    mutable_lastcommitinfo()->::vega::LastCommitInfo::MergeFrom(from.lastcommitinfo());
  }
}

void RequestBeginBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.RequestBeginBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestBeginBlock::CopyFrom(const RequestBeginBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.RequestBeginBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestBeginBlock::IsInitialized() const {
  return true;
}

void RequestBeginBlock::Swap(RequestBeginBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestBeginBlock::InternalSwap(RequestBeginBlock* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&byzantinevalidators_)->InternalSwap(CastToBase(&other->byzantinevalidators_));
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  swap(lastcommitinfo_, other->lastcommitinfo_);
}

::google::protobuf::Metadata RequestBeginBlock::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RequestDeliverTx::InitAsDefaultInstance() {
}
class RequestDeliverTx::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestDeliverTx::kTxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestDeliverTx::RequestDeliverTx()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.RequestDeliverTx)
}
RequestDeliverTx::RequestDeliverTx(const RequestDeliverTx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tx_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tx().size() > 0) {
    tx_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_);
  }
  // @@protoc_insertion_point(copy_constructor:vega.RequestDeliverTx)
}

void RequestDeliverTx::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RequestDeliverTx_proto_2ftm_2freplay_2eproto.base);
  tx_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RequestDeliverTx::~RequestDeliverTx() {
  // @@protoc_insertion_point(destructor:vega.RequestDeliverTx)
  SharedDtor();
}

void RequestDeliverTx::SharedDtor() {
  tx_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestDeliverTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestDeliverTx& RequestDeliverTx::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RequestDeliverTx_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void RequestDeliverTx::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.RequestDeliverTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RequestDeliverTx::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RequestDeliverTx*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes tx = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_tx();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RequestDeliverTx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.RequestDeliverTx)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes tx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.RequestDeliverTx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.RequestDeliverTx)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RequestDeliverTx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.RequestDeliverTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes tx = 1;
  if (this->tx().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->tx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.RequestDeliverTx)
}

::google::protobuf::uint8* RequestDeliverTx::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.RequestDeliverTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes tx = 1;
  if (this->tx().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->tx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.RequestDeliverTx)
  return target;
}

size_t RequestDeliverTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.RequestDeliverTx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes tx = 1;
  if (this->tx().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->tx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestDeliverTx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.RequestDeliverTx)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestDeliverTx* source =
      ::google::protobuf::DynamicCastToGenerated<RequestDeliverTx>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.RequestDeliverTx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.RequestDeliverTx)
    MergeFrom(*source);
  }
}

void RequestDeliverTx::MergeFrom(const RequestDeliverTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.RequestDeliverTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tx().size() > 0) {

    tx_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_);
  }
}

void RequestDeliverTx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.RequestDeliverTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestDeliverTx::CopyFrom(const RequestDeliverTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.RequestDeliverTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestDeliverTx::IsInitialized() const {
  return true;
}

void RequestDeliverTx::Swap(RequestDeliverTx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestDeliverTx::InternalSwap(RequestDeliverTx* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tx_.Swap(&other->tx_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata RequestDeliverTx::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResponseInitChain::InitAsDefaultInstance() {
  ::vega::_ResponseInitChain_default_instance_._instance.get_mutable()->consensusparams_ = const_cast< ::vega::ConsensusParams*>(
      ::vega::ConsensusParams::internal_default_instance());
}
class ResponseInitChain::HasBitSetters {
 public:
  static const ::vega::ConsensusParams& consensusparams(const ResponseInitChain* msg);
};

const ::vega::ConsensusParams&
ResponseInitChain::HasBitSetters::consensusparams(const ResponseInitChain* msg) {
  return *msg->consensusparams_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseInitChain::kConsensusParamsFieldNumber;
const int ResponseInitChain::kValidatorsFieldNumber;
const int ResponseInitChain::kAppHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseInitChain::ResponseInitChain()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.ResponseInitChain)
}
ResponseInitChain::ResponseInitChain(const ResponseInitChain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      validators_(from.validators_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apphash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apphash().size() > 0) {
    apphash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apphash_);
  }
  if (from.has_consensusparams()) {
    consensusparams_ = new ::vega::ConsensusParams(*from.consensusparams_);
  } else {
    consensusparams_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:vega.ResponseInitChain)
}

void ResponseInitChain::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResponseInitChain_proto_2ftm_2freplay_2eproto.base);
  apphash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consensusparams_ = nullptr;
}

ResponseInitChain::~ResponseInitChain() {
  // @@protoc_insertion_point(destructor:vega.ResponseInitChain)
  SharedDtor();
}

void ResponseInitChain::SharedDtor() {
  apphash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete consensusparams_;
}

void ResponseInitChain::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResponseInitChain& ResponseInitChain::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResponseInitChain_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void ResponseInitChain::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.ResponseInitChain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  validators_.Clear();
  apphash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && consensusparams_ != nullptr) {
    delete consensusparams_;
  }
  consensusparams_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResponseInitChain::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResponseInitChain*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .vega.ConsensusParams consensusParams = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::ConsensusParams::_InternalParse;
        object = msg->mutable_consensusparams();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .vega.ValidatorUpdate validators = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::vega::ValidatorUpdate::_InternalParse;
          object = msg->add_validators();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // bytes appHash = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_apphash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResponseInitChain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.ResponseInitChain)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .vega.ConsensusParams consensusParams = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_consensusparams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vega.ValidatorUpdate validators = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_validators()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes appHash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_apphash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.ResponseInitChain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.ResponseInitChain)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResponseInitChain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.ResponseInitChain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.ConsensusParams consensusParams = 1;
  if (this->has_consensusparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::consensusparams(this), output);
  }

  // repeated .vega.ValidatorUpdate validators = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validators_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->validators(static_cast<int>(i)),
      output);
  }

  // bytes appHash = 3;
  if (this->apphash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->apphash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.ResponseInitChain)
}

::google::protobuf::uint8* ResponseInitChain::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.ResponseInitChain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.ConsensusParams consensusParams = 1;
  if (this->has_consensusparams()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::consensusparams(this), target);
  }

  // repeated .vega.ValidatorUpdate validators = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->validators_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->validators(static_cast<int>(i)), target);
  }

  // bytes appHash = 3;
  if (this->apphash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->apphash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.ResponseInitChain)
  return target;
}

size_t ResponseInitChain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.ResponseInitChain)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vega.ValidatorUpdate validators = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->validators_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->validators(static_cast<int>(i)));
    }
  }

  // bytes appHash = 3;
  if (this->apphash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->apphash());
  }

  // .vega.ConsensusParams consensusParams = 1;
  if (this->has_consensusparams()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *consensusparams_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponseInitChain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.ResponseInitChain)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseInitChain* source =
      ::google::protobuf::DynamicCastToGenerated<ResponseInitChain>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.ResponseInitChain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.ResponseInitChain)
    MergeFrom(*source);
  }
}

void ResponseInitChain::MergeFrom(const ResponseInitChain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.ResponseInitChain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  validators_.MergeFrom(from.validators_);
  if (from.apphash().size() > 0) {

    apphash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apphash_);
  }
  if (from.has_consensusparams()) {
    mutable_consensusparams()->::vega::ConsensusParams::MergeFrom(from.consensusparams());
  }
}

void ResponseInitChain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.ResponseInitChain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseInitChain::CopyFrom(const ResponseInitChain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.ResponseInitChain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseInitChain::IsInitialized() const {
  return true;
}

void ResponseInitChain::Swap(ResponseInitChain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseInitChain::InternalSwap(ResponseInitChain* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&validators_)->InternalSwap(CastToBase(&other->validators_));
  apphash_.Swap(&other->apphash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(consensusparams_, other->consensusparams_);
}

::google::protobuf::Metadata ResponseInitChain::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResponseBeginBlock::InitAsDefaultInstance() {
}
class ResponseBeginBlock::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseBeginBlock::kEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseBeginBlock::ResponseBeginBlock()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.ResponseBeginBlock)
}
ResponseBeginBlock::ResponseBeginBlock(const ResponseBeginBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      events_(from.events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vega.ResponseBeginBlock)
}

void ResponseBeginBlock::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResponseBeginBlock_proto_2ftm_2freplay_2eproto.base);
}

ResponseBeginBlock::~ResponseBeginBlock() {
  // @@protoc_insertion_point(destructor:vega.ResponseBeginBlock)
  SharedDtor();
}

void ResponseBeginBlock::SharedDtor() {
}

void ResponseBeginBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResponseBeginBlock& ResponseBeginBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResponseBeginBlock_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void ResponseBeginBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.ResponseBeginBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResponseBeginBlock::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResponseBeginBlock*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .vega.Event events = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::vega::Event::_InternalParse;
          object = msg->add_events();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResponseBeginBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.ResponseBeginBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .vega.Event events = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.ResponseBeginBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.ResponseBeginBlock)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResponseBeginBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.ResponseBeginBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vega.Event events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->events(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.ResponseBeginBlock)
}

::google::protobuf::uint8* ResponseBeginBlock::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.ResponseBeginBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .vega.Event events = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->events(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.ResponseBeginBlock)
  return target;
}

size_t ResponseBeginBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.ResponseBeginBlock)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vega.Event events = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponseBeginBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.ResponseBeginBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseBeginBlock* source =
      ::google::protobuf::DynamicCastToGenerated<ResponseBeginBlock>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.ResponseBeginBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.ResponseBeginBlock)
    MergeFrom(*source);
  }
}

void ResponseBeginBlock::MergeFrom(const ResponseBeginBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.ResponseBeginBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
}

void ResponseBeginBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.ResponseBeginBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseBeginBlock::CopyFrom(const ResponseBeginBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.ResponseBeginBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseBeginBlock::IsInitialized() const {
  return true;
}

void ResponseBeginBlock::Swap(ResponseBeginBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseBeginBlock::InternalSwap(ResponseBeginBlock* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
}

::google::protobuf::Metadata ResponseBeginBlock::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResponseDeliverTx::InitAsDefaultInstance() {
}
class ResponseDeliverTx::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseDeliverTx::kCodeFieldNumber;
const int ResponseDeliverTx::kDataFieldNumber;
const int ResponseDeliverTx::kLogFieldNumber;
const int ResponseDeliverTx::kInfoFieldNumber;
const int ResponseDeliverTx::kGasWantedFieldNumber;
const int ResponseDeliverTx::kGasUsedFieldNumber;
const int ResponseDeliverTx::kEventsFieldNumber;
const int ResponseDeliverTx::kCodespaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseDeliverTx::ResponseDeliverTx()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.ResponseDeliverTx)
}
ResponseDeliverTx::ResponseDeliverTx(const ResponseDeliverTx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      events_(from.events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  log_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log().size() > 0) {
    log_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_);
  }
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.info().size() > 0) {
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  codespace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.codespace().size() > 0) {
    codespace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codespace_);
  }
  ::memcpy(&gaswanted_, &from.gaswanted_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&gaswanted_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:vega.ResponseDeliverTx)
}

void ResponseDeliverTx::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResponseDeliverTx_proto_2ftm_2freplay_2eproto.base);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  codespace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gaswanted_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&gaswanted_)) + sizeof(code_));
}

ResponseDeliverTx::~ResponseDeliverTx() {
  // @@protoc_insertion_point(destructor:vega.ResponseDeliverTx)
  SharedDtor();
}

void ResponseDeliverTx::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  codespace_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponseDeliverTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResponseDeliverTx& ResponseDeliverTx::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResponseDeliverTx_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void ResponseDeliverTx::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.ResponseDeliverTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  codespace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gaswanted_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&gaswanted_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResponseDeliverTx::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResponseDeliverTx*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string log = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.ResponseDeliverTx.log");
        object = msg->mutable_log();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string info = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.ResponseDeliverTx.info");
        object = msg->mutable_info();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 gasWanted = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_gaswanted(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 gasUsed = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_gasused(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .vega.Event events = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::vega::Event::_InternalParse;
          object = msg->add_events();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 58 && (ptr += 1));
        break;
      }
      // string codespace = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.ResponseDeliverTx.codespace");
        object = msg->mutable_codespace();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResponseDeliverTx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.ResponseDeliverTx)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log().data(), static_cast<int>(this->log().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.ResponseDeliverTx.log"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->info().data(), static_cast<int>(this->info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.ResponseDeliverTx.info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 gasWanted = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gaswanted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 gasUsed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gasused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vega.Event events = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string codespace = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_codespace()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->codespace().data(), static_cast<int>(this->codespace().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.ResponseDeliverTx.codespace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.ResponseDeliverTx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.ResponseDeliverTx)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResponseDeliverTx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.ResponseDeliverTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->code(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // string log = 3;
  if (this->log().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log().data(), static_cast<int>(this->log().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.ResponseDeliverTx.log");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->log(), output);
  }

  // string info = 4;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.ResponseDeliverTx.info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->info(), output);
  }

  // int64 gasWanted = 5;
  if (this->gaswanted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->gaswanted(), output);
  }

  // int64 gasUsed = 6;
  if (this->gasused() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->gasused(), output);
  }

  // repeated .vega.Event events = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->events(static_cast<int>(i)),
      output);
  }

  // string codespace = 8;
  if (this->codespace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codespace().data(), static_cast<int>(this->codespace().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.ResponseDeliverTx.codespace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->codespace(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.ResponseDeliverTx)
}

::google::protobuf::uint8* ResponseDeliverTx::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.ResponseDeliverTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->code(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // string log = 3;
  if (this->log().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log().data(), static_cast<int>(this->log().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.ResponseDeliverTx.log");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->log(), target);
  }

  // string info = 4;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.ResponseDeliverTx.info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->info(), target);
  }

  // int64 gasWanted = 5;
  if (this->gaswanted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->gaswanted(), target);
  }

  // int64 gasUsed = 6;
  if (this->gasused() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->gasused(), target);
  }

  // repeated .vega.Event events = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->events(static_cast<int>(i)), target);
  }

  // string codespace = 8;
  if (this->codespace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codespace().data(), static_cast<int>(this->codespace().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.ResponseDeliverTx.codespace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->codespace(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.ResponseDeliverTx)
  return target;
}

size_t ResponseDeliverTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.ResponseDeliverTx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vega.Event events = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string log = 3;
  if (this->log().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log());
  }

  // string info = 4;
  if (this->info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->info());
  }

  // string codespace = 8;
  if (this->codespace().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->codespace());
  }

  // int64 gasWanted = 5;
  if (this->gaswanted() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->gaswanted());
  }

  // int64 gasUsed = 6;
  if (this->gasused() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->gasused());
  }

  // uint32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponseDeliverTx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.ResponseDeliverTx)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseDeliverTx* source =
      ::google::protobuf::DynamicCastToGenerated<ResponseDeliverTx>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.ResponseDeliverTx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.ResponseDeliverTx)
    MergeFrom(*source);
  }
}

void ResponseDeliverTx::MergeFrom(const ResponseDeliverTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.ResponseDeliverTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.log().size() > 0) {

    log_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_);
  }
  if (from.info().size() > 0) {

    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.codespace().size() > 0) {

    codespace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codespace_);
  }
  if (from.gaswanted() != 0) {
    set_gaswanted(from.gaswanted());
  }
  if (from.gasused() != 0) {
    set_gasused(from.gasused());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void ResponseDeliverTx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.ResponseDeliverTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseDeliverTx::CopyFrom(const ResponseDeliverTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.ResponseDeliverTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseDeliverTx::IsInitialized() const {
  return true;
}

void ResponseDeliverTx::Swap(ResponseDeliverTx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseDeliverTx::InternalSwap(ResponseDeliverTx* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  log_.Swap(&other->log_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  info_.Swap(&other->info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  codespace_.Swap(&other->codespace_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(gaswanted_, other->gaswanted_);
  swap(gasused_, other->gasused_);
  swap(code_, other->code_);
}

::google::protobuf::Metadata ResponseDeliverTx::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Event::InitAsDefaultInstance() {
}
class Event::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kTypeFieldNumber;
const int Event::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      attributes_(from.attributes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:vega.Event)
}

void Event::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Event_proto_2ftm_2freplay_2eproto.base);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:vega.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Event& Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Event_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Event::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Event*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.Event.type");
        object = msg->mutable_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .vega.EventAttribute attributes = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::vega::EventAttribute::_InternalParse;
          object = msg->add_attributes();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.Event.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vega.EventAttribute attributes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.Event)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.Event.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // repeated .vega.EventAttribute attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->attributes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.Event.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // repeated .vega.EventAttribute attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->attributes(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.Event)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vega.EventAttribute attributes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::DynamicCastToGenerated<Event>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Event::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EventAttribute::InitAsDefaultInstance() {
}
class EventAttribute::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventAttribute::kKeyFieldNumber;
const int EventAttribute::kValueFieldNumber;
const int EventAttribute::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventAttribute::EventAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.EventAttribute)
}
EventAttribute::EventAttribute(const EventAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:vega.EventAttribute)
}

void EventAttribute::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EventAttribute_proto_2ftm_2freplay_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = false;
}

EventAttribute::~EventAttribute() {
  // @@protoc_insertion_point(destructor:vega.EventAttribute)
  SharedDtor();
}

void EventAttribute::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EventAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EventAttribute& EventAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EventAttribute_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void EventAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.EventAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EventAttribute::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EventAttribute*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool index = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EventAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.EventAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.EventAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.EventAttribute)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EventAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.EventAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // bool index = 3;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.EventAttribute)
}

::google::protobuf::uint8* EventAttribute::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.EventAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // bool index = 3;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.EventAttribute)
  return target;
}

size_t EventAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.EventAttribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // bool index = 3;
  if (this->index() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.EventAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const EventAttribute* source =
      ::google::protobuf::DynamicCastToGenerated<EventAttribute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.EventAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.EventAttribute)
    MergeFrom(*source);
  }
}

void EventAttribute::MergeFrom(const EventAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.EventAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void EventAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.EventAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventAttribute::CopyFrom(const EventAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.EventAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventAttribute::IsInitialized() const {
  return true;
}

void EventAttribute::Swap(EventAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventAttribute::InternalSwap(EventAttribute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
}

::google::protobuf::Metadata EventAttribute::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ValidatorUpdate::InitAsDefaultInstance() {
  ::vega::_ValidatorUpdate_default_instance_._instance.get_mutable()->pub_key_ = const_cast< ::vega::PublicKey*>(
      ::vega::PublicKey::internal_default_instance());
}
class ValidatorUpdate::HasBitSetters {
 public:
  static const ::vega::PublicKey& pub_key(const ValidatorUpdate* msg);
};

const ::vega::PublicKey&
ValidatorUpdate::HasBitSetters::pub_key(const ValidatorUpdate* msg) {
  return *msg->pub_key_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidatorUpdate::kPubKeyFieldNumber;
const int ValidatorUpdate::kPowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidatorUpdate::ValidatorUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.ValidatorUpdate)
}
ValidatorUpdate::ValidatorUpdate(const ValidatorUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pub_key()) {
    pub_key_ = new ::vega::PublicKey(*from.pub_key_);
  } else {
    pub_key_ = nullptr;
  }
  power_ = from.power_;
  // @@protoc_insertion_point(copy_constructor:vega.ValidatorUpdate)
}

void ValidatorUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ValidatorUpdate_proto_2ftm_2freplay_2eproto.base);
  ::memset(&pub_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&power_) -
      reinterpret_cast<char*>(&pub_key_)) + sizeof(power_));
}

ValidatorUpdate::~ValidatorUpdate() {
  // @@protoc_insertion_point(destructor:vega.ValidatorUpdate)
  SharedDtor();
}

void ValidatorUpdate::SharedDtor() {
  if (this != internal_default_instance()) delete pub_key_;
}

void ValidatorUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidatorUpdate& ValidatorUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ValidatorUpdate_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void ValidatorUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.ValidatorUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && pub_key_ != nullptr) {
    delete pub_key_;
  }
  pub_key_ = nullptr;
  power_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ValidatorUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ValidatorUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .vega.PublicKey pub_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::PublicKey::_InternalParse;
        object = msg->mutable_pub_key();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 power = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_power(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ValidatorUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.ValidatorUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .vega.PublicKey pub_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pub_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 power = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &power_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.ValidatorUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.ValidatorUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ValidatorUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.ValidatorUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.PublicKey pub_key = 1;
  if (this->has_pub_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pub_key(this), output);
  }

  // int64 power = 2;
  if (this->power() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->power(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.ValidatorUpdate)
}

::google::protobuf::uint8* ValidatorUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.ValidatorUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.PublicKey pub_key = 1;
  if (this->has_pub_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pub_key(this), target);
  }

  // int64 power = 2;
  if (this->power() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->power(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.ValidatorUpdate)
  return target;
}

size_t ValidatorUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.ValidatorUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vega.PublicKey pub_key = 1;
  if (this->has_pub_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pub_key_);
  }

  // int64 power = 2;
  if (this->power() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->power());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidatorUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.ValidatorUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidatorUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<ValidatorUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.ValidatorUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.ValidatorUpdate)
    MergeFrom(*source);
  }
}

void ValidatorUpdate::MergeFrom(const ValidatorUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.ValidatorUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pub_key()) {
    mutable_pub_key()->::vega::PublicKey::MergeFrom(from.pub_key());
  }
  if (from.power() != 0) {
    set_power(from.power());
  }
}

void ValidatorUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.ValidatorUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidatorUpdate::CopyFrom(const ValidatorUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.ValidatorUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidatorUpdate::IsInitialized() const {
  return true;
}

void ValidatorUpdate::Swap(ValidatorUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidatorUpdate::InternalSwap(ValidatorUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pub_key_, other->pub_key_);
  swap(power_, other->power_);
}

::google::protobuf::Metadata ValidatorUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ConsensusParams::InitAsDefaultInstance() {
  ::vega::_ConsensusParams_default_instance_._instance.get_mutable()->block_ = const_cast< ::vega::BlockParams*>(
      ::vega::BlockParams::internal_default_instance());
  ::vega::_ConsensusParams_default_instance_._instance.get_mutable()->evidence_ = const_cast< ::vega::EvidenceParams*>(
      ::vega::EvidenceParams::internal_default_instance());
  ::vega::_ConsensusParams_default_instance_._instance.get_mutable()->validator_ = const_cast< ::vega::ValidatorParams*>(
      ::vega::ValidatorParams::internal_default_instance());
  ::vega::_ConsensusParams_default_instance_._instance.get_mutable()->version_ = const_cast< ::vega::VersionParams*>(
      ::vega::VersionParams::internal_default_instance());
}
class ConsensusParams::HasBitSetters {
 public:
  static const ::vega::BlockParams& block(const ConsensusParams* msg);
  static const ::vega::EvidenceParams& evidence(const ConsensusParams* msg);
  static const ::vega::ValidatorParams& validator(const ConsensusParams* msg);
  static const ::vega::VersionParams& version(const ConsensusParams* msg);
};

const ::vega::BlockParams&
ConsensusParams::HasBitSetters::block(const ConsensusParams* msg) {
  return *msg->block_;
}
const ::vega::EvidenceParams&
ConsensusParams::HasBitSetters::evidence(const ConsensusParams* msg) {
  return *msg->evidence_;
}
const ::vega::ValidatorParams&
ConsensusParams::HasBitSetters::validator(const ConsensusParams* msg) {
  return *msg->validator_;
}
const ::vega::VersionParams&
ConsensusParams::HasBitSetters::version(const ConsensusParams* msg) {
  return *msg->version_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConsensusParams::kBlockFieldNumber;
const int ConsensusParams::kEvidenceFieldNumber;
const int ConsensusParams::kValidatorFieldNumber;
const int ConsensusParams::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConsensusParams::ConsensusParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.ConsensusParams)
}
ConsensusParams::ConsensusParams(const ConsensusParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_block()) {
    block_ = new ::vega::BlockParams(*from.block_);
  } else {
    block_ = nullptr;
  }
  if (from.has_evidence()) {
    evidence_ = new ::vega::EvidenceParams(*from.evidence_);
  } else {
    evidence_ = nullptr;
  }
  if (from.has_validator()) {
    validator_ = new ::vega::ValidatorParams(*from.validator_);
  } else {
    validator_ = nullptr;
  }
  if (from.has_version()) {
    version_ = new ::vega::VersionParams(*from.version_);
  } else {
    version_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:vega.ConsensusParams)
}

void ConsensusParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ConsensusParams_proto_2ftm_2freplay_2eproto.base);
  ::memset(&block_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&block_)) + sizeof(version_));
}

ConsensusParams::~ConsensusParams() {
  // @@protoc_insertion_point(destructor:vega.ConsensusParams)
  SharedDtor();
}

void ConsensusParams::SharedDtor() {
  if (this != internal_default_instance()) delete block_;
  if (this != internal_default_instance()) delete evidence_;
  if (this != internal_default_instance()) delete validator_;
  if (this != internal_default_instance()) delete version_;
}

void ConsensusParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConsensusParams& ConsensusParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ConsensusParams_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void ConsensusParams::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.ConsensusParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && block_ != nullptr) {
    delete block_;
  }
  block_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && evidence_ != nullptr) {
    delete evidence_;
  }
  evidence_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && validator_ != nullptr) {
    delete validator_;
  }
  validator_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && version_ != nullptr) {
    delete version_;
  }
  version_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ConsensusParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ConsensusParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .vega.BlockParams block = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::BlockParams::_InternalParse;
        object = msg->mutable_block();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .vega.EvidenceParams evidence = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::EvidenceParams::_InternalParse;
        object = msg->mutable_evidence();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .vega.ValidatorParams validator = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::ValidatorParams::_InternalParse;
        object = msg->mutable_validator();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .vega.VersionParams version = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::VersionParams::_InternalParse;
        object = msg->mutable_version();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ConsensusParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.ConsensusParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .vega.BlockParams block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.EvidenceParams evidence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_evidence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.ValidatorParams validator = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_validator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.VersionParams version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.ConsensusParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.ConsensusParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ConsensusParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.ConsensusParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.BlockParams block = 1;
  if (this->has_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::block(this), output);
  }

  // .vega.EvidenceParams evidence = 2;
  if (this->has_evidence()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::evidence(this), output);
  }

  // .vega.ValidatorParams validator = 3;
  if (this->has_validator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::validator(this), output);
  }

  // .vega.VersionParams version = 4;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::version(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.ConsensusParams)
}

::google::protobuf::uint8* ConsensusParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.ConsensusParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.BlockParams block = 1;
  if (this->has_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::block(this), target);
  }

  // .vega.EvidenceParams evidence = 2;
  if (this->has_evidence()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::evidence(this), target);
  }

  // .vega.ValidatorParams validator = 3;
  if (this->has_validator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::validator(this), target);
  }

  // .vega.VersionParams version = 4;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::version(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.ConsensusParams)
  return target;
}

size_t ConsensusParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.ConsensusParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vega.BlockParams block = 1;
  if (this->has_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *block_);
  }

  // .vega.EvidenceParams evidence = 2;
  if (this->has_evidence()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *evidence_);
  }

  // .vega.ValidatorParams validator = 3;
  if (this->has_validator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *validator_);
  }

  // .vega.VersionParams version = 4;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsensusParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.ConsensusParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsensusParams* source =
      ::google::protobuf::DynamicCastToGenerated<ConsensusParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.ConsensusParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.ConsensusParams)
    MergeFrom(*source);
  }
}

void ConsensusParams::MergeFrom(const ConsensusParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.ConsensusParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_block()) {
    mutable_block()->::vega::BlockParams::MergeFrom(from.block());
  }
  if (from.has_evidence()) {
    mutable_evidence()->::vega::EvidenceParams::MergeFrom(from.evidence());
  }
  if (from.has_validator()) {
    mutable_validator()->::vega::ValidatorParams::MergeFrom(from.validator());
  }
  if (from.has_version()) {
    mutable_version()->::vega::VersionParams::MergeFrom(from.version());
  }
}

void ConsensusParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.ConsensusParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsensusParams::CopyFrom(const ConsensusParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.ConsensusParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsensusParams::IsInitialized() const {
  return true;
}

void ConsensusParams::Swap(ConsensusParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConsensusParams::InternalSwap(ConsensusParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(block_, other->block_);
  swap(evidence_, other->evidence_);
  swap(validator_, other->validator_);
  swap(version_, other->version_);
}

::google::protobuf::Metadata ConsensusParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BlockParams::InitAsDefaultInstance() {
}
class BlockParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockParams::kMaxBytesFieldNumber;
const int BlockParams::kMaxGasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockParams::BlockParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.BlockParams)
}
BlockParams::BlockParams(const BlockParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&maxbytes_, &from.maxbytes_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxgas_) -
    reinterpret_cast<char*>(&maxbytes_)) + sizeof(maxgas_));
  // @@protoc_insertion_point(copy_constructor:vega.BlockParams)
}

void BlockParams::SharedCtor() {
  ::memset(&maxbytes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxgas_) -
      reinterpret_cast<char*>(&maxbytes_)) + sizeof(maxgas_));
}

BlockParams::~BlockParams() {
  // @@protoc_insertion_point(destructor:vega.BlockParams)
  SharedDtor();
}

void BlockParams::SharedDtor() {
}

void BlockParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BlockParams& BlockParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BlockParams_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void BlockParams::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.BlockParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&maxbytes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxgas_) -
      reinterpret_cast<char*>(&maxbytes_)) + sizeof(maxgas_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BlockParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BlockParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 maxBytes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_maxbytes(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 maxGas = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_maxgas(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BlockParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.BlockParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 maxBytes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxbytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 maxGas = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxgas_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.BlockParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.BlockParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BlockParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.BlockParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 maxBytes = 1;
  if (this->maxbytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->maxbytes(), output);
  }

  // int64 maxGas = 2;
  if (this->maxgas() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->maxgas(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.BlockParams)
}

::google::protobuf::uint8* BlockParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.BlockParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 maxBytes = 1;
  if (this->maxbytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->maxbytes(), target);
  }

  // int64 maxGas = 2;
  if (this->maxgas() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->maxgas(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.BlockParams)
  return target;
}

size_t BlockParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.BlockParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 maxBytes = 1;
  if (this->maxbytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->maxbytes());
  }

  // int64 maxGas = 2;
  if (this->maxgas() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->maxgas());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.BlockParams)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockParams* source =
      ::google::protobuf::DynamicCastToGenerated<BlockParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.BlockParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.BlockParams)
    MergeFrom(*source);
  }
}

void BlockParams::MergeFrom(const BlockParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.BlockParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.maxbytes() != 0) {
    set_maxbytes(from.maxbytes());
  }
  if (from.maxgas() != 0) {
    set_maxgas(from.maxgas());
  }
}

void BlockParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.BlockParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockParams::CopyFrom(const BlockParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.BlockParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockParams::IsInitialized() const {
  return true;
}

void BlockParams::Swap(BlockParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockParams::InternalSwap(BlockParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(maxbytes_, other->maxbytes_);
  swap(maxgas_, other->maxgas_);
}

::google::protobuf::Metadata BlockParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Evidence::InitAsDefaultInstance() {
  ::vega::_Evidence_default_instance_._instance.get_mutable()->validator_ = const_cast< ::vega::Validator*>(
      ::vega::Validator::internal_default_instance());
}
class Evidence::HasBitSetters {
 public:
  static const ::vega::Validator& validator(const Evidence* msg);
};

const ::vega::Validator&
Evidence::HasBitSetters::validator(const Evidence* msg) {
  return *msg->validator_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Evidence::kTypeFieldNumber;
const int Evidence::kValidatorFieldNumber;
const int Evidence::kHeightFieldNumber;
const int Evidence::kTimeFieldNumber;
const int Evidence::kTotalVotingPowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Evidence::Evidence()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.Evidence)
}
Evidence::Evidence(const Evidence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_validator()) {
    validator_ = new ::vega::Validator(*from.validator_);
  } else {
    validator_ = nullptr;
  }
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&height_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:vega.Evidence)
}

void Evidence::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Evidence_proto_2ftm_2freplay_2eproto.base);
  ::memset(&validator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&validator_)) + sizeof(type_));
}

Evidence::~Evidence() {
  // @@protoc_insertion_point(destructor:vega.Evidence)
  SharedDtor();
}

void Evidence::SharedDtor() {
  if (this != internal_default_instance()) delete validator_;
}

void Evidence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Evidence& Evidence::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Evidence_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void Evidence::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.Evidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && validator_ != nullptr) {
    delete validator_;
  }
  validator_ = nullptr;
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&height_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Evidence::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Evidence*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .vega.EvidenceType type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::vega::EvidenceType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .vega.Validator validator = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::Validator::_InternalParse;
        object = msg->mutable_validator();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 height = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_height(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 time = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 totalVotingPower = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_totalvotingpower(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Evidence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.Evidence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .vega.EvidenceType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::vega::EvidenceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vega.Validator validator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_validator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 totalVotingPower = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalvotingpower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.Evidence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.Evidence)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Evidence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.Evidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.EvidenceType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .vega.Validator validator = 2;
  if (this->has_validator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::validator(this), output);
  }

  // int64 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->height(), output);
  }

  // int64 time = 4;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->time(), output);
  }

  // int64 totalVotingPower = 5;
  if (this->totalvotingpower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->totalvotingpower(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.Evidence)
}

::google::protobuf::uint8* Evidence::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.Evidence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.EvidenceType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .vega.Validator validator = 2;
  if (this->has_validator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::validator(this), target);
  }

  // int64 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->height(), target);
  }

  // int64 time = 4;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->time(), target);
  }

  // int64 totalVotingPower = 5;
  if (this->totalvotingpower() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->totalvotingpower(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.Evidence)
  return target;
}

size_t Evidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.Evidence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vega.Validator validator = 2;
  if (this->has_validator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *validator_);
  }

  // int64 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->height());
  }

  // int64 time = 4;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // int64 totalVotingPower = 5;
  if (this->totalvotingpower() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalvotingpower());
  }

  // .vega.EvidenceType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Evidence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.Evidence)
  GOOGLE_DCHECK_NE(&from, this);
  const Evidence* source =
      ::google::protobuf::DynamicCastToGenerated<Evidence>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.Evidence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.Evidence)
    MergeFrom(*source);
  }
}

void Evidence::MergeFrom(const Evidence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.Evidence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_validator()) {
    mutable_validator()->::vega::Validator::MergeFrom(from.validator());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.totalvotingpower() != 0) {
    set_totalvotingpower(from.totalvotingpower());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Evidence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.Evidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Evidence::CopyFrom(const Evidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.Evidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Evidence::IsInitialized() const {
  return true;
}

void Evidence::Swap(Evidence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Evidence::InternalSwap(Evidence* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(validator_, other->validator_);
  swap(height_, other->height_);
  swap(time_, other->time_);
  swap(totalvotingpower_, other->totalvotingpower_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata Evidence::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Validator::InitAsDefaultInstance() {
}
class Validator::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Validator::kAddressFieldNumber;
const int Validator::kPowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Validator::Validator()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.Validator)
}
Validator::Validator(const Validator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  power_ = from.power_;
  // @@protoc_insertion_point(copy_constructor:vega.Validator)
}

void Validator::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Validator_proto_2ftm_2freplay_2eproto.base);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  power_ = PROTOBUF_LONGLONG(0);
}

Validator::~Validator() {
  // @@protoc_insertion_point(destructor:vega.Validator)
  SharedDtor();
}

void Validator::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Validator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Validator& Validator::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Validator_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void Validator::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.Validator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  power_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Validator::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Validator*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes address = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 power = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_power(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Validator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.Validator)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 power = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &power_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.Validator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.Validator)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Validator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.Validator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->address(), output);
  }

  // int64 power = 3;
  if (this->power() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->power(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.Validator)
}

::google::protobuf::uint8* Validator::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.Validator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes address = 1;
  if (this->address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->address(), target);
  }

  // int64 power = 3;
  if (this->power() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->power(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.Validator)
  return target;
}

size_t Validator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.Validator)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  // int64 power = 3;
  if (this->power() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->power());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Validator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.Validator)
  GOOGLE_DCHECK_NE(&from, this);
  const Validator* source =
      ::google::protobuf::DynamicCastToGenerated<Validator>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.Validator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.Validator)
    MergeFrom(*source);
  }
}

void Validator::MergeFrom(const Validator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.Validator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.power() != 0) {
    set_power(from.power());
  }
}

void Validator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.Validator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Validator::CopyFrom(const Validator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.Validator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Validator::IsInitialized() const {
  return true;
}

void Validator::Swap(Validator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Validator::InternalSwap(Validator* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(power_, other->power_);
}

::google::protobuf::Metadata Validator::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LastCommitInfo::InitAsDefaultInstance() {
}
class LastCommitInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LastCommitInfo::kRoundFieldNumber;
const int LastCommitInfo::kVotesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LastCommitInfo::LastCommitInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.LastCommitInfo)
}
LastCommitInfo::LastCommitInfo(const LastCommitInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      votes_(from.votes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  round_ = from.round_;
  // @@protoc_insertion_point(copy_constructor:vega.LastCommitInfo)
}

void LastCommitInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LastCommitInfo_proto_2ftm_2freplay_2eproto.base);
  round_ = 0;
}

LastCommitInfo::~LastCommitInfo() {
  // @@protoc_insertion_point(destructor:vega.LastCommitInfo)
  SharedDtor();
}

void LastCommitInfo::SharedDtor() {
}

void LastCommitInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LastCommitInfo& LastCommitInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LastCommitInfo_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void LastCommitInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.LastCommitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  votes_.Clear();
  round_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LastCommitInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LastCommitInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 round = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_round(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .vega.VoteInfo votes = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::vega::VoteInfo::_InternalParse;
          object = msg->add_votes();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LastCommitInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.LastCommitInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 round = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .vega.VoteInfo votes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_votes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.LastCommitInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.LastCommitInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LastCommitInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.LastCommitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 round = 1;
  if (this->round() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->round(), output);
  }

  // repeated .vega.VoteInfo votes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->votes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->votes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.LastCommitInfo)
}

::google::protobuf::uint8* LastCommitInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.LastCommitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 round = 1;
  if (this->round() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->round(), target);
  }

  // repeated .vega.VoteInfo votes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->votes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->votes(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.LastCommitInfo)
  return target;
}

size_t LastCommitInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.LastCommitInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .vega.VoteInfo votes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->votes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->votes(static_cast<int>(i)));
    }
  }

  // int32 round = 1;
  if (this->round() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->round());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LastCommitInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.LastCommitInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LastCommitInfo* source =
      ::google::protobuf::DynamicCastToGenerated<LastCommitInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.LastCommitInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.LastCommitInfo)
    MergeFrom(*source);
  }
}

void LastCommitInfo::MergeFrom(const LastCommitInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.LastCommitInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  votes_.MergeFrom(from.votes_);
  if (from.round() != 0) {
    set_round(from.round());
  }
}

void LastCommitInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.LastCommitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LastCommitInfo::CopyFrom(const LastCommitInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.LastCommitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LastCommitInfo::IsInitialized() const {
  return true;
}

void LastCommitInfo::Swap(LastCommitInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LastCommitInfo::InternalSwap(LastCommitInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&votes_)->InternalSwap(CastToBase(&other->votes_));
  swap(round_, other->round_);
}

::google::protobuf::Metadata LastCommitInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VoteInfo::InitAsDefaultInstance() {
  ::vega::_VoteInfo_default_instance_._instance.get_mutable()->validator_ = const_cast< ::vega::Validator*>(
      ::vega::Validator::internal_default_instance());
}
class VoteInfo::HasBitSetters {
 public:
  static const ::vega::Validator& validator(const VoteInfo* msg);
};

const ::vega::Validator&
VoteInfo::HasBitSetters::validator(const VoteInfo* msg) {
  return *msg->validator_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoteInfo::kValidatorFieldNumber;
const int VoteInfo::kSignedLastBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoteInfo::VoteInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.VoteInfo)
}
VoteInfo::VoteInfo(const VoteInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_validator()) {
    validator_ = new ::vega::Validator(*from.validator_);
  } else {
    validator_ = nullptr;
  }
  signedlastblock_ = from.signedlastblock_;
  // @@protoc_insertion_point(copy_constructor:vega.VoteInfo)
}

void VoteInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VoteInfo_proto_2ftm_2freplay_2eproto.base);
  ::memset(&validator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signedlastblock_) -
      reinterpret_cast<char*>(&validator_)) + sizeof(signedlastblock_));
}

VoteInfo::~VoteInfo() {
  // @@protoc_insertion_point(destructor:vega.VoteInfo)
  SharedDtor();
}

void VoteInfo::SharedDtor() {
  if (this != internal_default_instance()) delete validator_;
}

void VoteInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VoteInfo& VoteInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VoteInfo_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void VoteInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.VoteInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && validator_ != nullptr) {
    delete validator_;
  }
  validator_ = nullptr;
  signedlastblock_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VoteInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VoteInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .vega.Validator validator = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::vega::Validator::_InternalParse;
        object = msg->mutable_validator();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool signedLastBlock = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_signedlastblock(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VoteInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.VoteInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .vega.Validator validator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_validator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool signedLastBlock = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &signedlastblock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.VoteInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.VoteInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VoteInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.VoteInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.Validator validator = 1;
  if (this->has_validator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::validator(this), output);
  }

  // bool signedLastBlock = 2;
  if (this->signedlastblock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->signedlastblock(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.VoteInfo)
}

::google::protobuf::uint8* VoteInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.VoteInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .vega.Validator validator = 1;
  if (this->has_validator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::validator(this), target);
  }

  // bool signedLastBlock = 2;
  if (this->signedlastblock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->signedlastblock(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.VoteInfo)
  return target;
}

size_t VoteInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.VoteInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .vega.Validator validator = 1;
  if (this->has_validator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *validator_);
  }

  // bool signedLastBlock = 2;
  if (this->signedlastblock() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoteInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.VoteInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const VoteInfo* source =
      ::google::protobuf::DynamicCastToGenerated<VoteInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.VoteInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.VoteInfo)
    MergeFrom(*source);
  }
}

void VoteInfo::MergeFrom(const VoteInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.VoteInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_validator()) {
    mutable_validator()->::vega::Validator::MergeFrom(from.validator());
  }
  if (from.signedlastblock() != 0) {
    set_signedlastblock(from.signedlastblock());
  }
}

void VoteInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.VoteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoteInfo::CopyFrom(const VoteInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.VoteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoteInfo::IsInitialized() const {
  return true;
}

void VoteInfo::Swap(VoteInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoteInfo::InternalSwap(VoteInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(validator_, other->validator_);
  swap(signedlastblock_, other->signedlastblock_);
}

::google::protobuf::Metadata VoteInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void EvidenceParams::InitAsDefaultInstance() {
}
class EvidenceParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvidenceParams::kMaxAgeNumBlocksFieldNumber;
const int EvidenceParams::kMaxAgeDurationFieldNumber;
const int EvidenceParams::kMaxNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvidenceParams::EvidenceParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.EvidenceParams)
}
EvidenceParams::EvidenceParams(const EvidenceParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&maxagenumblocks_, &from.maxagenumblocks_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_num_) -
    reinterpret_cast<char*>(&maxagenumblocks_)) + sizeof(max_num_));
  // @@protoc_insertion_point(copy_constructor:vega.EvidenceParams)
}

void EvidenceParams::SharedCtor() {
  ::memset(&maxagenumblocks_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_num_) -
      reinterpret_cast<char*>(&maxagenumblocks_)) + sizeof(max_num_));
}

EvidenceParams::~EvidenceParams() {
  // @@protoc_insertion_point(destructor:vega.EvidenceParams)
  SharedDtor();
}

void EvidenceParams::SharedDtor() {
}

void EvidenceParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EvidenceParams& EvidenceParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EvidenceParams_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void EvidenceParams::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.EvidenceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&maxagenumblocks_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_num_) -
      reinterpret_cast<char*>(&maxagenumblocks_)) + sizeof(max_num_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EvidenceParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EvidenceParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 maxAgeNumBlocks = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_maxagenumblocks(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 maxAgeDuration = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_maxageduration(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 max_num = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_max_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EvidenceParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.EvidenceParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 maxAgeNumBlocks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxagenumblocks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 maxAgeDuration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxageduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.EvidenceParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.EvidenceParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EvidenceParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.EvidenceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 maxAgeNumBlocks = 1;
  if (this->maxagenumblocks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->maxagenumblocks(), output);
  }

  // int64 maxAgeDuration = 2;
  if (this->maxageduration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->maxageduration(), output);
  }

  // uint32 max_num = 3;
  if (this->max_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->max_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.EvidenceParams)
}

::google::protobuf::uint8* EvidenceParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.EvidenceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 maxAgeNumBlocks = 1;
  if (this->maxagenumblocks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->maxagenumblocks(), target);
  }

  // int64 maxAgeDuration = 2;
  if (this->maxageduration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->maxageduration(), target);
  }

  // uint32 max_num = 3;
  if (this->max_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->max_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.EvidenceParams)
  return target;
}

size_t EvidenceParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.EvidenceParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 maxAgeNumBlocks = 1;
  if (this->maxagenumblocks() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->maxagenumblocks());
  }

  // int64 maxAgeDuration = 2;
  if (this->maxageduration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->maxageduration());
  }

  // uint32 max_num = 3;
  if (this->max_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EvidenceParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.EvidenceParams)
  GOOGLE_DCHECK_NE(&from, this);
  const EvidenceParams* source =
      ::google::protobuf::DynamicCastToGenerated<EvidenceParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.EvidenceParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.EvidenceParams)
    MergeFrom(*source);
  }
}

void EvidenceParams::MergeFrom(const EvidenceParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.EvidenceParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.maxagenumblocks() != 0) {
    set_maxagenumblocks(from.maxagenumblocks());
  }
  if (from.maxageduration() != 0) {
    set_maxageduration(from.maxageduration());
  }
  if (from.max_num() != 0) {
    set_max_num(from.max_num());
  }
}

void EvidenceParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.EvidenceParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvidenceParams::CopyFrom(const EvidenceParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.EvidenceParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvidenceParams::IsInitialized() const {
  return true;
}

void EvidenceParams::Swap(EvidenceParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvidenceParams::InternalSwap(EvidenceParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(maxagenumblocks_, other->maxagenumblocks_);
  swap(maxageduration_, other->maxageduration_);
  swap(max_num_, other->max_num_);
}

::google::protobuf::Metadata EvidenceParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ValidatorParams::InitAsDefaultInstance() {
}
class ValidatorParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidatorParams::kPubKeyTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidatorParams::ValidatorParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.ValidatorParams)
}
ValidatorParams::ValidatorParams(const ValidatorParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      pubkeytypes_(from.pubkeytypes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vega.ValidatorParams)
}

void ValidatorParams::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ValidatorParams_proto_2ftm_2freplay_2eproto.base);
}

ValidatorParams::~ValidatorParams() {
  // @@protoc_insertion_point(destructor:vega.ValidatorParams)
  SharedDtor();
}

void ValidatorParams::SharedDtor() {
}

void ValidatorParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValidatorParams& ValidatorParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ValidatorParams_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void ValidatorParams::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.ValidatorParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pubkeytypes_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ValidatorParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ValidatorParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string pubKeyTypes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("vega.ValidatorParams.pubKeyTypes");
          object = msg->add_pubkeytypes();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ValidatorParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.ValidatorParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string pubKeyTypes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_pubkeytypes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pubkeytypes(this->pubkeytypes_size() - 1).data(),
            static_cast<int>(this->pubkeytypes(this->pubkeytypes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.ValidatorParams.pubKeyTypes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.ValidatorParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.ValidatorParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ValidatorParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.ValidatorParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string pubKeyTypes = 1;
  for (int i = 0, n = this->pubkeytypes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubkeytypes(i).data(), static_cast<int>(this->pubkeytypes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.ValidatorParams.pubKeyTypes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->pubkeytypes(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.ValidatorParams)
}

::google::protobuf::uint8* ValidatorParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.ValidatorParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string pubKeyTypes = 1;
  for (int i = 0, n = this->pubkeytypes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pubkeytypes(i).data(), static_cast<int>(this->pubkeytypes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.ValidatorParams.pubKeyTypes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->pubkeytypes(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.ValidatorParams)
  return target;
}

size_t ValidatorParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.ValidatorParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string pubKeyTypes = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pubkeytypes_size());
  for (int i = 0, n = this->pubkeytypes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->pubkeytypes(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidatorParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.ValidatorParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidatorParams* source =
      ::google::protobuf::DynamicCastToGenerated<ValidatorParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.ValidatorParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.ValidatorParams)
    MergeFrom(*source);
  }
}

void ValidatorParams::MergeFrom(const ValidatorParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.ValidatorParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pubkeytypes_.MergeFrom(from.pubkeytypes_);
}

void ValidatorParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.ValidatorParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidatorParams::CopyFrom(const ValidatorParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.ValidatorParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidatorParams::IsInitialized() const {
  return true;
}

void ValidatorParams::Swap(ValidatorParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidatorParams::InternalSwap(ValidatorParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  pubkeytypes_.InternalSwap(CastToBase(&other->pubkeytypes_));
}

::google::protobuf::Metadata ValidatorParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VersionParams::InitAsDefaultInstance() {
}
class VersionParams::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionParams::kAppVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionParams::VersionParams()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.VersionParams)
}
VersionParams::VersionParams(const VersionParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appversion_ = from.appversion_;
  // @@protoc_insertion_point(copy_constructor:vega.VersionParams)
}

void VersionParams::SharedCtor() {
  appversion_ = PROTOBUF_ULONGLONG(0);
}

VersionParams::~VersionParams() {
  // @@protoc_insertion_point(destructor:vega.VersionParams)
  SharedDtor();
}

void VersionParams::SharedDtor() {
}

void VersionParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VersionParams& VersionParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VersionParams_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void VersionParams::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.VersionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appversion_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VersionParams::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VersionParams*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 appVersion = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_appversion(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VersionParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.VersionParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 appVersion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.VersionParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.VersionParams)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VersionParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.VersionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 appVersion = 1;
  if (this->appversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->appversion(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.VersionParams)
}

::google::protobuf::uint8* VersionParams::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.VersionParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 appVersion = 1;
  if (this->appversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->appversion(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.VersionParams)
  return target;
}

size_t VersionParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.VersionParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 appVersion = 1;
  if (this->appversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appversion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VersionParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.VersionParams)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionParams* source =
      ::google::protobuf::DynamicCastToGenerated<VersionParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.VersionParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.VersionParams)
    MergeFrom(*source);
  }
}

void VersionParams::MergeFrom(const VersionParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.VersionParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appversion() != 0) {
    set_appversion(from.appversion());
  }
}

void VersionParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.VersionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionParams::CopyFrom(const VersionParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.VersionParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionParams::IsInitialized() const {
  return true;
}

void VersionParams::Swap(VersionParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionParams::InternalSwap(VersionParams* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(appversion_, other->appversion_);
}

::google::protobuf::Metadata VersionParams::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Header::InitAsDefaultInstance() {
}
class Header::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Header::kChainIdFieldNumber;
const int Header::kHeightFieldNumber;
const int Header::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Header::Header()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.Header)
}
Header::Header(const Header& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chainid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chainid().size() > 0) {
    chainid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chainid_);
  }
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&height_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:vega.Header)
}

void Header::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Header_proto_2ftm_2freplay_2eproto.base);
  chainid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&height_)) + sizeof(time_));
}

Header::~Header() {
  // @@protoc_insertion_point(destructor:vega.Header)
  SharedDtor();
}

void Header::SharedDtor() {
  chainid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Header::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Header& Header::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Header_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chainid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&height_)) + sizeof(time_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Header::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Header*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string chainId = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("vega.Header.chainId");
        object = msg->mutable_chainid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 height = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_height(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 time = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.Header)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string chainId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chainid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chainid().data(), static_cast<int>(this->chainid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vega.Header.chainId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.Header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.Header)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string chainId = 1;
  if (this->chainid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chainid().data(), static_cast<int>(this->chainid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.Header.chainId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chainid(), output);
  }

  // int64 height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->height(), output);
  }

  // int64 time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.Header)
}

::google::protobuf::uint8* Header::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string chainId = 1;
  if (this->chainid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chainid().data(), static_cast<int>(this->chainid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vega.Header.chainId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chainid(), target);
  }

  // int64 height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->height(), target);
  }

  // int64 time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.Header)
  return target;
}

size_t Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.Header)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string chainId = 1;
  if (this->chainid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chainid());
  }

  // int64 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->height());
  }

  // int64 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.Header)
  GOOGLE_DCHECK_NE(&from, this);
  const Header* source =
      ::google::protobuf::DynamicCastToGenerated<Header>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.Header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.Header)
    MergeFrom(*source);
  }
}

void Header::MergeFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.Header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chainid().size() > 0) {

    chainid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chainid_);
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void Header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Header::IsInitialized() const {
  return true;
}

void Header::Swap(Header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Header::InternalSwap(Header* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  chainid_.Swap(&other->chainid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(height_, other->height_);
  swap(time_, other->time_);
}

::google::protobuf::Metadata Header::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PublicKey::InitAsDefaultInstance() {
  ::vega::_PublicKey_default_instance_.ed25519_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class PublicKey::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublicKey::kEd25519FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublicKey::PublicKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:vega.PublicKey)
}
PublicKey::PublicKey(const PublicKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_sum();
  switch (from.sum_case()) {
    case kEd25519: {
      set_ed25519(from.ed25519());
      break;
    }
    case SUM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:vega.PublicKey)
}

void PublicKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PublicKey_proto_2ftm_2freplay_2eproto.base);
  clear_has_sum();
}

PublicKey::~PublicKey() {
  // @@protoc_insertion_point(destructor:vega.PublicKey)
  SharedDtor();
}

void PublicKey::SharedDtor() {
  if (has_sum()) {
    clear_sum();
  }
}

void PublicKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PublicKey& PublicKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PublicKey_proto_2ftm_2freplay_2eproto.base);
  return *internal_default_instance();
}


void PublicKey::clear_sum() {
// @@protoc_insertion_point(one_of_clear_start:vega.PublicKey)
  switch (sum_case()) {
    case kEd25519: {
      sum_.ed25519_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case SUM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SUM_NOT_SET;
}


void PublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:vega.PublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_sum();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PublicKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PublicKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes ed25519 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ed25519();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PublicKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vega.PublicKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes ed25519 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ed25519()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vega.PublicKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vega.PublicKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PublicKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vega.PublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ed25519 = 1;
  if (has_ed25519()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ed25519(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:vega.PublicKey)
}

::google::protobuf::uint8* PublicKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:vega.PublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ed25519 = 1;
  if (has_ed25519()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ed25519(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vega.PublicKey)
  return target;
}

size_t PublicKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vega.PublicKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (sum_case()) {
    // bytes ed25519 = 1;
    case kEd25519: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ed25519());
      break;
    }
    case SUM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublicKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vega.PublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  const PublicKey* source =
      ::google::protobuf::DynamicCastToGenerated<PublicKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vega.PublicKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vega.PublicKey)
    MergeFrom(*source);
  }
}

void PublicKey::MergeFrom(const PublicKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vega.PublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.sum_case()) {
    case kEd25519: {
      set_ed25519(from.ed25519());
      break;
    }
    case SUM_NOT_SET: {
      break;
    }
  }
}

void PublicKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vega.PublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublicKey::CopyFrom(const PublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vega.PublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublicKey::IsInitialized() const {
  return true;
}

void PublicKey::Swap(PublicKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublicKey::InternalSwap(PublicKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(sum_, other->sum_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata PublicKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_proto_2ftm_2freplay_2eproto);
  return ::file_level_metadata_proto_2ftm_2freplay_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace vega
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::vega::TmEvent* Arena::CreateMaybeMessage< ::vega::TmEvent >(Arena* arena) {
  return Arena::CreateInternal< ::vega::TmEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::RequestInitChain* Arena::CreateMaybeMessage< ::vega::RequestInitChain >(Arena* arena) {
  return Arena::CreateInternal< ::vega::RequestInitChain >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::RequestBeginBlock* Arena::CreateMaybeMessage< ::vega::RequestBeginBlock >(Arena* arena) {
  return Arena::CreateInternal< ::vega::RequestBeginBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::RequestDeliverTx* Arena::CreateMaybeMessage< ::vega::RequestDeliverTx >(Arena* arena) {
  return Arena::CreateInternal< ::vega::RequestDeliverTx >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::ResponseInitChain* Arena::CreateMaybeMessage< ::vega::ResponseInitChain >(Arena* arena) {
  return Arena::CreateInternal< ::vega::ResponseInitChain >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::ResponseBeginBlock* Arena::CreateMaybeMessage< ::vega::ResponseBeginBlock >(Arena* arena) {
  return Arena::CreateInternal< ::vega::ResponseBeginBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::ResponseDeliverTx* Arena::CreateMaybeMessage< ::vega::ResponseDeliverTx >(Arena* arena) {
  return Arena::CreateInternal< ::vega::ResponseDeliverTx >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::Event* Arena::CreateMaybeMessage< ::vega::Event >(Arena* arena) {
  return Arena::CreateInternal< ::vega::Event >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::EventAttribute* Arena::CreateMaybeMessage< ::vega::EventAttribute >(Arena* arena) {
  return Arena::CreateInternal< ::vega::EventAttribute >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::ValidatorUpdate* Arena::CreateMaybeMessage< ::vega::ValidatorUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::vega::ValidatorUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::ConsensusParams* Arena::CreateMaybeMessage< ::vega::ConsensusParams >(Arena* arena) {
  return Arena::CreateInternal< ::vega::ConsensusParams >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::BlockParams* Arena::CreateMaybeMessage< ::vega::BlockParams >(Arena* arena) {
  return Arena::CreateInternal< ::vega::BlockParams >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::Evidence* Arena::CreateMaybeMessage< ::vega::Evidence >(Arena* arena) {
  return Arena::CreateInternal< ::vega::Evidence >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::Validator* Arena::CreateMaybeMessage< ::vega::Validator >(Arena* arena) {
  return Arena::CreateInternal< ::vega::Validator >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::LastCommitInfo* Arena::CreateMaybeMessage< ::vega::LastCommitInfo >(Arena* arena) {
  return Arena::CreateInternal< ::vega::LastCommitInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::VoteInfo* Arena::CreateMaybeMessage< ::vega::VoteInfo >(Arena* arena) {
  return Arena::CreateInternal< ::vega::VoteInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::EvidenceParams* Arena::CreateMaybeMessage< ::vega::EvidenceParams >(Arena* arena) {
  return Arena::CreateInternal< ::vega::EvidenceParams >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::ValidatorParams* Arena::CreateMaybeMessage< ::vega::ValidatorParams >(Arena* arena) {
  return Arena::CreateInternal< ::vega::ValidatorParams >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::VersionParams* Arena::CreateMaybeMessage< ::vega::VersionParams >(Arena* arena) {
  return Arena::CreateInternal< ::vega::VersionParams >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::Header* Arena::CreateMaybeMessage< ::vega::Header >(Arena* arena) {
  return Arena::CreateInternal< ::vega::Header >(arena);
}
template<> PROTOBUF_NOINLINE ::vega::PublicKey* Arena::CreateMaybeMessage< ::vega::PublicKey >(Arena* arena) {
  return Arena::CreateInternal< ::vega::PublicKey >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
